{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/StrutsProcess.jpg","path":"images/StrutsProcess.jpg","modified":0,"renderable":0},{"_id":"source/images/StrutsPrinciple.png","path":"images/StrutsPrinciple.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"1fd81c56d37ed3991af5e43790d5078327fe47e1","modified":1488530952302},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1486350144144},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1486350144144},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1486350144144},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1486350144144},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1486350144144},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1486350144144},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1486350144144},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1486350144144},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1486350144144},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1486350144160},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1486350144144},{"_id":"themes/next/_config.yml","hash":"5bb72b50bc1c0666d7eaeea72fd084cbe25199af","modified":1490264305657},{"_id":"source/_posts/2017-3-14-设计模式学习.md","hash":"7619d2419e26e1776d09205e570f3c5989bd0732","modified":1490275106079},{"_id":"source/_posts/2017-3-21-Struts-2-复习.md","hash":"d06255e8267141264e1b7ce33a7f3e4dfc6e567e","modified":1490261161208},{"_id":"source/_posts/JavaEE中servlet，filter，listener解析-2017-7-24.md","hash":"55f786958c64a99f33a5944084056dba59eba105","modified":1500906226973},{"_id":"source/_posts/Maven将java项目打包成可独立运行的jar包-2017-4-4.md","hash":"591e8e400543eb5a0a491689d19b4efa927ef621","modified":1491283711322},{"_id":"source/_posts/Mysql-优化常见命令-2017-6-16.md","hash":"129cc0d59cfb473190fc3dbf463c9e452fa2d042","modified":1497621531121},{"_id":"source/_posts/SQL-语句的优化-2017-6-19.md","hash":"27a98b5740bdbfb28d8fa065018955898f7828fb","modified":1497943597843},{"_id":"source/_posts/浅谈TCP端口扫描技术-2017-5-4.md","hash":"54c0dd75f005cb8806c6cdb3755ad83159544ccb","modified":1493875107363},{"_id":"source/_posts/设计模式学习（续）-2017-3-27.md","hash":"e4c8910d3ad9e3b38b98032a200965924bfb71cc","modified":1490592098159},{"_id":"source/_posts/.2017-2-27-python编码详解.md.swp","hash":"08a987f96d4ed01bed3aed9c9e28c46591dfbca9","modified":1488199922841},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1486350144144},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1486350144144},{"_id":"source/categories/index.md","hash":"f6d423cc94614c8951c13a3d43d93f19be5beca5","modified":1486435556090},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1486350144124},{"_id":"themes/next/.git/config","hash":"073c1c5af4e0139a70cc8de631817a8e357f5832","modified":1486350144124},{"_id":"source/_posts/2017-2-8-新的开始！.md","hash":"c273331721d81424bb58ae285645d79726507a39","modified":1486637196884},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1486350130264},{"_id":"themes/next/.git/index","hash":"8832d99847615d4cbaabd34a86a36490d092e280","modified":1486350144204},{"_id":"themes/next/.git/packed-refs","hash":"12ca02d8374d9a441a6c8a6c9ed061432cb0a8c9","modified":1486350144108},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1486350144160},{"_id":"source/_posts/2017-2-27-python编码详解.md","hash":"d27ce71fbd6d635bccc2e8bdef0c20e98034a127","modified":1506434836795},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1486350144156},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1486350144156},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1486350144156},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1486350144156},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1486350144156},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1486350144156},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1486350144156},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1486350144156},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1486350144156},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1486350144156},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1486350144156},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1486350144156},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1486350144156},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1486350144156},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1486350144160},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1486350144160},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1486350144160},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1486350144160},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1486350144160},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1486350144160},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1486350144160},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1486350144204},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1486350144204},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1486350144204},{"_id":"source/images/StrutsProcess.jpg","hash":"5418d650720ad0f75820cae711468faf7c52bcb6","modified":1490104568302},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"source/images/StrutsPrinciple.png","hash":"eead17373d90e284dfd22304bc41fc03ef836cc1","modified":1490104021631},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1486350144172},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1486350144172},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1486350144172},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1486350144172},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1486350144172},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1486350130264},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1486350130264},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1486350130264},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1486350130264},{"_id":"themes/next/.git/logs/HEAD","hash":"44e19ccd466ccc0a8b7d308738c3e52a13933531","modified":1486350144124},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1486350130264},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1486350130264},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1486350130264},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1486350144156},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1486350130264},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1486350144156},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1486350144156},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1486350144156},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1486350144156},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1486350144156},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1486350130264},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1486350130264},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1486350144156},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1486350144156},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1486350144156},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1486350144156},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1486350144156},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1486350144156},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1486350144160},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1486350144156},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1486350144156},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1486350144156},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1486350144156},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1486350144156},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1486350144156},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1486350144176},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144160},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144160},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1486350144176},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1486350144176},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1486350144176},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1486350144176},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1486350144176},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1486350144176},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486350144176},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1486350144176},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1486350144176},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1486350144176},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1486350144176},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1486350144176},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1486350144176},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1486350144176},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1486350144156},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1486350144156},{"_id":"themes/next/.git/refs/heads/master","hash":"2311b7302155cc3ec46e40ad16dc5c94e36328b4","modified":1486350144124},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1486350144156},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1486350144176},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1486350144156},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1486350144156},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1486350144156},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1486350144156},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1486350144156},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1486350144156},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1486350144160},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1486350144156},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1486350144156},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1486350144176},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1486350144176},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1486350144176},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1486350144176},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1486350144176},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1486350144176},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1486350144180},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1486350144180},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1486350144180},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1486350144156},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1486350144180},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1486350144200},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1486350144180},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1486350144180},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1486350144200},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1486350144200},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1486350144200},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1486350144200},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1486350144200},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1486350144200},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1486350144204},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1486350144200},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1486350144204},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1486350144200},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1486350144192},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1486350144204},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1486350144192},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1486350144192},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1486350144192},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1486350144192},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1486350144200},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1486350144176},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1486350144176},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1486350144176},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1486350144176},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1486350144176},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1486350144176},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1486350144176},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1486350144176},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1486350144160},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1486350144124},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"44e19ccd466ccc0a8b7d308738c3e52a13933531","modified":1486350144124},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1486350144160},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1486350144160},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1486350144176},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1486350144176},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1486350144176},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1486350144176},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1486350144176},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1486350144176},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1486350144176},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486350144180},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1486350144200},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1486350144200},{"_id":"themes/next/.git/objects/pack/pack-b12a0e7fb1f93be4353277412b223c495989e313.idx","hash":"4ea2b7de79f1f41a895e476d2f4532bcb7cd0270","modified":1486350144000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1486350144192},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1486350144192},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1486350144204},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486350144196},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486350144196},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486350144200},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1486350144196},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1486350144196},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1486350144196},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486350144200},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1486350144172},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"44e19ccd466ccc0a8b7d308738c3e52a13933531","modified":1486350144124},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1486350144172},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1486350144176},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1486350144176},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486350144200},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1486350144176},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1486350144176},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1486350144180},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1486350144176},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1486350144180},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1486350144180},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1486350144200},{"_id":"themes/next/.git/objects/pack/pack-b12a0e7fb1f93be4353277412b223c495989e313.pack","hash":"ed73ecb3db3bf78f5e01ca5007c68de73f17d1ac","modified":1486350143996},{"_id":"public/search.xml","hash":"442c4f2dd117b1001948ed455db6ab4b9b8685e9","modified":1506434877261},{"_id":"public/categories/index.html","hash":"df8e7f7b94fcb6d36843a58dca76605a67941ab8","modified":1500906125115},{"_id":"public/2017/07/24/JavaEE中servlet，filter，listener解析/index.html","hash":"b4765bf3c617dba543a0e035e8a3e41ea98f4987","modified":1500906289529},{"_id":"public/2017/05/04/浅谈TCP端口扫描技术/index.html","hash":"6477d1142fce8a0084a888f11124ed0cb6c5b9a0","modified":1500906125122},{"_id":"public/2017/06/16/Mysql-优化常见命令/index.html","hash":"ae2da586c86563335290f5a079533fe84664fad2","modified":1500906125122},{"_id":"public/2017/04/04/Maven将java项目打包成可独立运行的jar包/index.html","hash":"0ba3279c7f205d270182f9b16107c9e0abaef592","modified":1500906125122},{"_id":"public/2017/06/19/SQL-语句的优化/index.html","hash":"a9e2e49e4d2c997f4fa07a7b69abaf528c9f0ae1","modified":1500906125122},{"_id":"public/archives/2017/04/index.html","hash":"537aad7e17f88edeeb35159bdc13073caa471cdb","modified":1500906125177},{"_id":"public/archives/2017/05/index.html","hash":"2a7b5a256063a24babcbd1fb52d32a9b3eb3d82e","modified":1500906125177},{"_id":"public/categories/网络技术/index.html","hash":"fe559457241f4b5ae4cbc3849d130fa81a948550","modified":1500906125177},{"_id":"public/categories/数据库/index.html","hash":"f43912f6bda8cf135efa41c5833333e0bce5d235","modified":1500906125178},{"_id":"public/categories/Python/index.html","hash":"3fee205e28c6d3ee55eff4066073c52d8eb40278","modified":1500906125178},{"_id":"public/tags/SQL/index.html","hash":"92a578271dd20b8bb2a32e23dd0914766b2d513a","modified":1500906125178},{"_id":"public/tags/Mysql/index.html","hash":"4f96e3f3cda7d97dcaabad0d6b5c30f20bef6475","modified":1500906125178},{"_id":"public/2017/03/21/2017-3-21-Struts-2-复习/index.html","hash":"07038b210dae04990d3bbb37f8cc9d0527f7a5a5","modified":1500906125178},{"_id":"public/2017/03/14/2017-3-14-设计模式学习/index.html","hash":"89baa636d39dc30dcd178a9957c8d259fa366a15","modified":1500906125178},{"_id":"public/2017/03/27/设计模式学习（续）/index.html","hash":"61bd3f9ddff17c4792eebe785d20e58fd5291c26","modified":1500906125178},{"_id":"public/archives/index.html","hash":"4ba43576fda1ffe83d0883f2bf3c6510c6983d16","modified":1500906125178},{"_id":"public/archives/page/2/index.html","hash":"e43ee5bd9994181c4d7f2d3a71083906abb85054","modified":1500906125178},{"_id":"public/2017/02/27/2017-2-27-python编码详解/index.html","hash":"dbf49a8e934efd74c800947625eb344621668828","modified":1506434877307},{"_id":"public/2017/02/08/2017-2-8-新的开始！/index.html","hash":"fd573c4a68bbdc7499d8b5dc2380e2abe15bb7a7","modified":1500906125178},{"_id":"public/archives/2017/index.html","hash":"3ecfd084b38ebe021fac6259278ac2f11f3cc52c","modified":1500906125178},{"_id":"public/archives/2017/02/index.html","hash":"4832984902688d22b9baf0b5df6220e9ec3d60f9","modified":1500906125178},{"_id":"public/archives/2017/03/index.html","hash":"36bb953ba22301a57843f5ad77b4193dda94dbe7","modified":1500906125178},{"_id":"public/archives/2017/page/2/index.html","hash":"e4efb27e76e30742164dabdc5ef49978a0d98842","modified":1500906125178},{"_id":"public/categories/Others/index.html","hash":"fc3eacf454b2e72b32e257bb1d7b5d7f6dd3df8c","modified":1500906125178},{"_id":"public/index.html","hash":"55b8b4bf8ab21d0cc3c385c14692adb95a6f54cc","modified":1500906289530},{"_id":"public/archives/2017/06/index.html","hash":"633cfb1f64f81b46004d0f6adcf554b976b742b0","modified":1500906125178},{"_id":"public/page/2/index.html","hash":"ae4854cd95534dd560fa82471ee862d22388df70","modified":1506434877307},{"_id":"public/categories/Java/index.html","hash":"4f63aa25595b38f17b5b598757c3d1d4098748fa","modified":1500906125178},{"_id":"public/archives/2017/07/index.html","hash":"4e356850d1ebe854830f962f10fbe70fc2567471","modified":1500906125192},{"_id":"public/CNAME","hash":"1fd81c56d37ed3991af5e43790d5078327fe47e1","modified":1500906125192},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1500906125192},{"_id":"public/images/StrutsProcess.jpg","hash":"5418d650720ad0f75820cae711468faf7c52bcb6","modified":1500906125192},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1500906125192},{"_id":"public/images/StrutsPrinciple.png","hash":"eead17373d90e284dfd22304bc41fc03ef836cc1","modified":1500906125192},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1500906125192},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1500906125192},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1500906125192},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1500906125192},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1500906125192},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1500906125192},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1500906125192},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1500906125193},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1500906125193},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1500906125193},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1500906125193},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1500906125193},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1500906125193},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1500906125193},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1500906125193},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1500906125193},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1500906125193},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1500906125193},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1500906125193},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1500906125193},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1500906125193},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1500906125193},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1500906127511},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1500906127519},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1500906127524},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1500906127524},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1500906127530},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1500906127530},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1500906127530},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1500906127530},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1500906127530},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1500906127530},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1500906127530},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1500906127531},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1500906127531},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1500906127531},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1500906127531},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1500906127531},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1500906127531},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1500906127531},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1500906127531},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1500906127531},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1500906127531},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1500906127531},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1500906127531},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1500906127531},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1500906127531},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1500906127532},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1500906127532},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1500906127532},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1500906127532},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1500906127532},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1500906127532},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1500906127532},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1500906127532},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1500906127532},{"_id":"public/css/main.css","hash":"b51300a904515bb786e79b916864067d5c125d57","modified":1500906127532},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1500906127532},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1500906127532},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1500906127532},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1500906127532},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1500906127532},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1500906127532},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1500906127532},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1500906127532},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1500906127532},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1500906127532},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1500906127532},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1500906127563},{"_id":"source/_posts/2017-2-27-python编码详解.md.bak","hash":"5d8641bc604893543c019144c64444a87d23c5dd","modified":1506431430613},{"_id":"source/_posts/npm-debug.log","hash":"4cd2415a506f4532aa1d7f4e70b7f3842d5e44a5","modified":1506432376875},{"_id":"source/README.md","hash":"c50b9bb3facbb2c7cb766bab101591499c3c6667","modified":1506434770199},{"_id":"source/.git/COMMIT_EDITMSG","hash":"4e1243bd22c66e76c2ba9eddc1f91394e57f9f83","modified":1506434854155},{"_id":"source/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1506434589602},{"_id":"source/.git/FETCH_HEAD","hash":"15641e385a589d985ea3298a482b4bb547bb2b2e","modified":1506434770029},{"_id":"source/.git/config","hash":"a789e8dd175215d33928a075143dba5f997c0d02","modified":1506434674789},{"_id":"source/.git/ORIG_HEAD","hash":"e81c5b989e0eb8a54d5f6c72e7f71ed8537b0e4f","modified":1506434770140},{"_id":"source/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1506434589546},{"_id":"source/.git/index","hash":"1dcecd933e912c21cbe1052fc08b43eb4a33ce6e","modified":1506434854154},{"_id":"source/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1506434589550},{"_id":"source/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1506434589552},{"_id":"source/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1506434589581},{"_id":"source/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1506434589582},{"_id":"source/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1506434589583},{"_id":"source/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1506434589585},{"_id":"source/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1506434589587},{"_id":"source/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1506434589589},{"_id":"source/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1506434589591},{"_id":"source/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1506434589592},{"_id":"source/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1506434589596},{"_id":"source/.git/logs/HEAD","hash":"082473d4667371f8928437285c4064890c7a1369","modified":1506434854158},{"_id":"source/.git/objects/08/14b8c838e3ea051dd0b88bb2fa827d086b6d2e","hash":"ad323b139e2bea7b4628f8584e91de293b4e855c","modified":1506434618152},{"_id":"source/.git/objects/0a/74a18623b08c1a264b946592e93782450b1e5a","hash":"3adff98263d69fec517f1f54e7ff4fc93f662772","modified":1506434845000},{"_id":"source/.git/objects/0c/b8e420c836d5e51f3dc535590dd76d1a25fb0f","hash":"925699ef9613d7e6dd03db9c412d2942f9744681","modified":1506434618140},{"_id":"source/.git/objects/28/4f793fa20ac6fb8770083f105488c00b518597","hash":"47f4c98356cf329537bfc22dc8827e242bccc51c","modified":1506434854000},{"_id":"source/.git/objects/3a/b05771d923e466d0112f93f1a6c47187226124","hash":"a78d3251c149483b78e0429c900c83a35b14842b","modified":1506434845000},{"_id":"source/.git/objects/4c/be3d26b8dc499555f78453ec7aae5e6970b54f","hash":"ba8dccf321dc4da87b0c2bdc27d3dc9f44b46d0a","modified":1506434845000},{"_id":"source/.git/objects/51/c6ac3b2977272f63244a5aa21b2fb8f645741c","hash":"be158843253b1eb955005418f99d50253e4684a1","modified":1506434845000},{"_id":"source/.git/objects/65/1d5e796b802ce18522e43df2f0d8a575b2ad69","hash":"93ed5437fcafaf7a9f80911a539ea4f75295404a","modified":1506434769722},{"_id":"source/.git/objects/67/b755dab6917c83d2aa6803ac15ab4f60e5a589","hash":"38eb802c2142964334b6e57bc81c34401e875ff4","modified":1506434845000},{"_id":"source/.git/objects/73/659d8f2379092c876f8dc92cbafbd6b6c84200","hash":"0f2d3901fd25de0cf27de6d5d73ee4e5248c2808","modified":1506434845000},{"_id":"source/.git/objects/74/c126eaab36cd4fd543e570e54672fb1d6a00e7","hash":"825bf9c6efff4518c0403307e713c23f596eef3d","modified":1506434845000},{"_id":"source/.git/objects/87/335645ba78fe8405de5c537045773e5809b242","hash":"99e79ccb104b6ca260ef3dc280ade5fe58da25e7","modified":1506434845000},{"_id":"source/.git/objects/9a/3530bc94813fe0a3e5a5c7f4f166994f5e8449","hash":"dc79eed35a547836cd23093b80f0fd60d3c7829a","modified":1506434618165},{"_id":"source/.git/objects/9b/a19674d774f9ffc7cf63ebae96ae3e8a86d985","hash":"89abf8bcd6d68d99328510dcb451332887624912","modified":1506434845000},{"_id":"source/.git/objects/a5/3d910b0d82ce0506f52481d77896f010a74e32","hash":"f7d0ea8342847fb3021674ee850125af6a2e788b","modified":1506434854131},{"_id":"source/.git/objects/a6/dd76bf8ca06b8c547df4b06ea7311ad847d2c3","hash":"d411a688cfa36edde1d6c0aaa520a24e76d738fd","modified":1506434854153},{"_id":"source/.git/objects/a4/89797ea1fa1066a3e80c5e478a3a2cb0e6ab0b","hash":"da12e7dd2550c67ceedf9b0cebbe60d4d4d84ad7","modified":1506434854156},{"_id":"source/.git/objects/a9/ec3a6ec0353a3a03f93e3c759a48d9fc9b76e4","hash":"bb5b9f47b7ab1d323243efc9042dcbb37e1dd1f6","modified":1506434845000},{"_id":"source/.git/objects/aa/fb64ff246a6eabe223322f17967e5e7a561876","hash":"178191da99e953e2164ccbde878b68b8c59f9f9c","modified":1506434845000},{"_id":"source/.git/objects/ac/9741bc1909b381593078316d6131dbd2c9e3d6","hash":"fe14c2b66ecca4e8c249e485d87a280e1009206a","modified":1506434845000},{"_id":"source/.git/objects/b1/ff8c495c2e31261d501ad55be237103d6b5a05","hash":"d95d7044175429b33922758f7b5e242eb5831fae","modified":1506434769746},{"_id":"source/.git/objects/b3/bec28da0a65c01df91a300910ff09cd1480c36","hash":"ba2a5fd7fdafb9fcffac152d193187b2e3938ada","modified":1506434854000},{"_id":"source/.git/objects/be/4ca49cd5d4c347b77ab820c21852f6e3210d05","hash":"06ff78abeb5ae98f5a6a9e5174d6c35062c4b0ad","modified":1506434845000},{"_id":"source/.git/objects/c7/d8ea775160c5589a1bef4efc432a0241aa0fe3","hash":"c6a971c43e702823b7a0834fd18616bdcb960f47","modified":1506434845000},{"_id":"source/.git/objects/ce/84a1ff32c8ec0621ede1a3c80e5ba900896ebf","hash":"3578f858f60a87f3f4131bdfebed510aab4940b0","modified":1506434845000},{"_id":"source/.git/objects/d7/ffc140c865ebc974680a4d00baecfc1abd4df3","hash":"5b0cbc7f9ad1d946908bea5851eda8ac4baa3fc7","modified":1506434595853},{"_id":"source/.git/objects/f4/6046a455da316771d7de6865410a08396f24ee","hash":"517820735bf4698fb4bcf2bad48a48d92d381146","modified":1506434845000},{"_id":"source/.git/objects/f4/d45f5201724312adb02d5754e2019e3d3b81c4","hash":"bf4d2c6abe134ca7d9307567533a364f16d0aecf","modified":1506434845000},{"_id":"source/.git/refs/heads/master","hash":"eb4cfa00ee45960bec779dacea68a674123f436a","modified":1506434854157},{"_id":"source/.git/objects/36/7e9f1b01a0d6b12509e94c33d0f003870e4319","hash":"a3a97a9519370f12920ba2550b7c66844d3bfd0d","modified":1506434601150},{"_id":"source/.git/logs/refs/heads/master","hash":"082473d4667371f8928437285c4064890c7a1369","modified":1506434854158},{"_id":"source/.git/refs/remotes/origin/master","hash":"eb4cfa00ee45960bec779dacea68a674123f436a","modified":1506434869945},{"_id":"source/.git/logs/refs/remotes/origin/master","hash":"0e4337e44a2f81b4eab474a283ec16b7660fe5bf","modified":1506434869945},{"_id":"public/README.html","hash":"40932c8b03a76f340882913c5993c20ad353acc0","modified":1506434877308}],"Category":[{"name":"其它","_id":"cj5i8r3se0002l29vtbxwcgt1"},{"name":"Java","_id":"cj5i8r3sq0006l29vf49zuo26"},{"name":"数据库","_id":"cj5i8r3t4000gl29vzk31jeoc"},{"name":"网络技术","_id":"cj5i8r3t5000kl29vz0g3ci4k"},{"name":"Python","_id":"cj5i8r3w7000tl29v649dej8g"}],"Data":[],"Page":[{"title":"categories","date":"2017-02-07T02:44:42.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-02-07 10:44:42\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-02-07T02:45:56.090Z","path":"categories/index.html","layout":"page","_id":"cj5i8r3v9000pl29v7zyo0kqh","content":"","excerpt":"","more":""},{"_content":"\"# 个人博客文章\" \n","source":"README.md","raw":"\"# 个人博客文章\" \n","date":"2017-09-26T14:06:10.199Z","updated":"2017-09-26T14:06:10.199Z","path":"README.html","title":"","comments":1,"layout":"page","_id":"cj81ofgrp0000rwfamdb5jdvb","content":"<p>“# 个人博客文章” </p>\n","excerpt":"","more":"<p>“# 个人博客文章” </p>\n"}],"Post":[{"title":"设计模式学习","date":"2017-03-14T14:37:59.000Z","_content":"## OO基础 ##\n* 抽象\n* 封装\n* 多态\n* 继承\n\n## OO原则 ##\n* 封装变化的\n* 多用组合，少用继承\n* 针对接口编程，不针对实现编程\n* 低耦合，高内聚\n* 对扩展开放，对修改关闭\n\n## OO模式 ##\n模式是历经验证的OO设计经验\n\n### 策略模式 ###\n> 策略模式定义了算法族，分别封装起来，让它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。（例子：鸭子飞的行为与叫的行为）\n\n### 观察者模式 ###\n> 观察者模式定义了对象之间的一对多依赖，当一个对象(主题)改变状态时，它的所有依赖者(观察者)都会收到通知并自动更新。(例子：报社与订阅者之间的关系）\n\n### 装饰者模式 ###\n> 动态的将责任附加到对象上。想要扩展功能，装饰者提供有别于继承的另一种选择。java库中IO类如FileInputStream(new InputStream())采用此模式。(例子：饮料添加各种调料）\n\n### 工厂方法模式 ###\n> 定义一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。(各个地方开披萨分店，但各个地方口味不同）\n\n### 单例模式 ###\n> 单例模式就是一个类只能生成一个对象。分为懒汉式（用时生成对象）和饿汉式（类加载时就生成对象），懒汉式线程不安全，饿汉式线程安全。懒汉式可以将获得对象的静态方法变成同步方法（加synchronized关键字）使之成为线程安全。当然这种方式性能不太好，另一种方式是“双重检查加锁”，在判断对象是否生成后再同步。\n```java\nif(instance == null){\n    synchronized (Singleton.class) {\n        if(instance == null){\n            instance = new Singleton();\n        }\n    }\n}\n```\n","source":"_posts/2017-3-14-设计模式学习.md","raw":"---\ntitle: 设计模式学习\ncategories: 其它\ndate: 2017-03-14 22:37:59\n---\n## OO基础 ##\n* 抽象\n* 封装\n* 多态\n* 继承\n\n## OO原则 ##\n* 封装变化的\n* 多用组合，少用继承\n* 针对接口编程，不针对实现编程\n* 低耦合，高内聚\n* 对扩展开放，对修改关闭\n\n## OO模式 ##\n模式是历经验证的OO设计经验\n\n### 策略模式 ###\n> 策略模式定义了算法族，分别封装起来，让它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。（例子：鸭子飞的行为与叫的行为）\n\n### 观察者模式 ###\n> 观察者模式定义了对象之间的一对多依赖，当一个对象(主题)改变状态时，它的所有依赖者(观察者)都会收到通知并自动更新。(例子：报社与订阅者之间的关系）\n\n### 装饰者模式 ###\n> 动态的将责任附加到对象上。想要扩展功能，装饰者提供有别于继承的另一种选择。java库中IO类如FileInputStream(new InputStream())采用此模式。(例子：饮料添加各种调料）\n\n### 工厂方法模式 ###\n> 定义一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。(各个地方开披萨分店，但各个地方口味不同）\n\n### 单例模式 ###\n> 单例模式就是一个类只能生成一个对象。分为懒汉式（用时生成对象）和饿汉式（类加载时就生成对象），懒汉式线程不安全，饿汉式线程安全。懒汉式可以将获得对象的静态方法变成同步方法（加synchronized关键字）使之成为线程安全。当然这种方式性能不太好，另一种方式是“双重检查加锁”，在判断对象是否生成后再同步。\n```java\nif(instance == null){\n    synchronized (Singleton.class) {\n        if(instance == null){\n            instance = new Singleton();\n        }\n    }\n}\n```\n","slug":"2017-3-14-设计模式学习","published":1,"updated":"2017-03-23T13:18:26.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3s60000l29vno3mcup1","content":"<h2 id=\"OO基础\"><a href=\"#OO基础\" class=\"headerlink\" title=\"OO基础\"></a>OO基础</h2><ul>\n<li>抽象</li>\n<li>封装</li>\n<li>多态</li>\n<li>继承</li>\n</ul>\n<h2 id=\"OO原则\"><a href=\"#OO原则\" class=\"headerlink\" title=\"OO原则\"></a>OO原则</h2><ul>\n<li>封装变化的</li>\n<li>多用组合，少用继承</li>\n<li>针对接口编程，不针对实现编程</li>\n<li>低耦合，高内聚</li>\n<li>对扩展开放，对修改关闭</li>\n</ul>\n<h2 id=\"OO模式\"><a href=\"#OO模式\" class=\"headerlink\" title=\"OO模式\"></a>OO模式</h2><p>模式是历经验证的OO设计经验</p>\n<h3 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h3><blockquote>\n<p>策略模式定义了算法族，分别封装起来，让它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。（例子：鸭子飞的行为与叫的行为）</p>\n</blockquote>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><blockquote>\n<p>观察者模式定义了对象之间的一对多依赖，当一个对象(主题)改变状态时，它的所有依赖者(观察者)都会收到通知并自动更新。(例子：报社与订阅者之间的关系）</p>\n</blockquote>\n<h3 id=\"装饰者模式\"><a href=\"#装饰者模式\" class=\"headerlink\" title=\"装饰者模式\"></a>装饰者模式</h3><blockquote>\n<p>动态的将责任附加到对象上。想要扩展功能，装饰者提供有别于继承的另一种选择。java库中IO类如FileInputStream(new InputStream())采用此模式。(例子：饮料添加各种调料）</p>\n</blockquote>\n<h3 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h3><blockquote>\n<p>定义一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。(各个地方开披萨分店，但各个地方口味不同）</p>\n</blockquote>\n<h3 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h3><blockquote>\n<p>单例模式就是一个类只能生成一个对象。分为懒汉式（用时生成对象）和饿汉式（类加载时就生成对象），懒汉式线程不安全，饿汉式线程安全。懒汉式可以将获得对象的静态方法变成同步方法（加synchronized关键字）使之成为线程安全。当然这种方式性能不太好，另一种方式是“双重检查加锁”，在判断对象是否生成后再同步。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(instance == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (Singleton.class) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(instance == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            instance = <span class=\"keyword\">new</span> Singleton();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"OO基础\"><a href=\"#OO基础\" class=\"headerlink\" title=\"OO基础\"></a>OO基础</h2><ul>\n<li>抽象</li>\n<li>封装</li>\n<li>多态</li>\n<li>继承</li>\n</ul>\n<h2 id=\"OO原则\"><a href=\"#OO原则\" class=\"headerlink\" title=\"OO原则\"></a>OO原则</h2><ul>\n<li>封装变化的</li>\n<li>多用组合，少用继承</li>\n<li>针对接口编程，不针对实现编程</li>\n<li>低耦合，高内聚</li>\n<li>对扩展开放，对修改关闭</li>\n</ul>\n<h2 id=\"OO模式\"><a href=\"#OO模式\" class=\"headerlink\" title=\"OO模式\"></a>OO模式</h2><p>模式是历经验证的OO设计经验</p>\n<h3 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h3><blockquote>\n<p>策略模式定义了算法族，分别封装起来，让它们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。（例子：鸭子飞的行为与叫的行为）</p>\n</blockquote>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><blockquote>\n<p>观察者模式定义了对象之间的一对多依赖，当一个对象(主题)改变状态时，它的所有依赖者(观察者)都会收到通知并自动更新。(例子：报社与订阅者之间的关系）</p>\n</blockquote>\n<h3 id=\"装饰者模式\"><a href=\"#装饰者模式\" class=\"headerlink\" title=\"装饰者模式\"></a>装饰者模式</h3><blockquote>\n<p>动态的将责任附加到对象上。想要扩展功能，装饰者提供有别于继承的另一种选择。java库中IO类如FileInputStream(new InputStream())采用此模式。(例子：饮料添加各种调料）</p>\n</blockquote>\n<h3 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h3><blockquote>\n<p>定义一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。(各个地方开披萨分店，但各个地方口味不同）</p>\n</blockquote>\n<h3 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h3><blockquote>\n<p>单例模式就是一个类只能生成一个对象。分为懒汉式（用时生成对象）和饿汉式（类加载时就生成对象），懒汉式线程不安全，饿汉式线程安全。懒汉式可以将获得对象的静态方法变成同步方法（加synchronized关键字）使之成为线程安全。当然这种方式性能不太好，另一种方式是“双重检查加锁”，在判断对象是否生成后再同步。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(instance == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (Singleton.class) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(instance == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            instance = <span class=\"keyword\">new</span> Singleton();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n"},{"title":"Struts 2 复习","date":"2017-03-21T13:12:57.000Z","_content":"# Struts 2 简介 #\nApache Struts 2是一个用于开发Java EE网络应用程序的开源框架。它利用并延伸了Java Servlet API，鼓励开发者采用MVC架构。\nStruts 2 与Struts 1 有很大的不同，它缘起于Apache的WebWork框架，旨在提供相对于Struts1框架的增强和改进，同时保留与Struts1框架类似的结构。但实质是以WebWork为核心。2005年12月，WebWork宣布WebWork 2.2以Apache Struts 2的名义合并至Struts。\n# Struts 2 原理 #\n### Struts 2 结构图: ###\n![](/images/StrutsPrinciple.png)\n### Struts 2 流程图: ###\n![](/images/StrutsProcess.jpg)\n### Struts 2 处理步骤: ####\n1. 客户端发生一个请求（HttpServletRequest）；\n2. 请求被Struts 2 中定义的三层过滤器（Filter）如：ActionCOntextCleanUp、SiteMesh、FilterDispatcher；\n3. FilterDisPatcher做为Struts 2 的控制器核心，询问ActionMapper是否需要调用某个Action来处理这个请求，如果决定调用,FilterDispatcher则把请求交给ActionProxy；\n4. ActionProxy通过Configuration Manager查询配置文件（struts.xml），找到需要调用的Action类。\n5. ActionProxy 创建一个ActionInvocation 的实例，同时ActionInvocation 通过代理模式调用Action。但在调用之前会根据配置文件加载所有与Action 相关的Interceptor；\n6. 当Action 执行完毕后，ActionInvocation 负责根据配置文件找到相应的返回结果（struts.xml中action节点的result节点）并执行相关动作。\n\n","source":"_posts/2017-3-21-Struts-2-复习.md","raw":"---\ntitle: Struts 2 复习\ncategories: Java\ndate: 2017-03-21 21:12:57\n---\n# Struts 2 简介 #\nApache Struts 2是一个用于开发Java EE网络应用程序的开源框架。它利用并延伸了Java Servlet API，鼓励开发者采用MVC架构。\nStruts 2 与Struts 1 有很大的不同，它缘起于Apache的WebWork框架，旨在提供相对于Struts1框架的增强和改进，同时保留与Struts1框架类似的结构。但实质是以WebWork为核心。2005年12月，WebWork宣布WebWork 2.2以Apache Struts 2的名义合并至Struts。\n# Struts 2 原理 #\n### Struts 2 结构图: ###\n![](/images/StrutsPrinciple.png)\n### Struts 2 流程图: ###\n![](/images/StrutsProcess.jpg)\n### Struts 2 处理步骤: ####\n1. 客户端发生一个请求（HttpServletRequest）；\n2. 请求被Struts 2 中定义的三层过滤器（Filter）如：ActionCOntextCleanUp、SiteMesh、FilterDispatcher；\n3. FilterDisPatcher做为Struts 2 的控制器核心，询问ActionMapper是否需要调用某个Action来处理这个请求，如果决定调用,FilterDispatcher则把请求交给ActionProxy；\n4. ActionProxy通过Configuration Manager查询配置文件（struts.xml），找到需要调用的Action类。\n5. ActionProxy 创建一个ActionInvocation 的实例，同时ActionInvocation 通过代理模式调用Action。但在调用之前会根据配置文件加载所有与Action 相关的Interceptor；\n6. 当Action 执行完毕后，ActionInvocation 负责根据配置文件找到相应的返回结果（struts.xml中action节点的result节点）并执行相关动作。\n\n","slug":"2017-3-21-Struts-2-复习","published":1,"updated":"2017-03-23T09:26:01.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3sb0001l29v2hmtx98n","content":"<h1 id=\"Struts-2-简介\"><a href=\"#Struts-2-简介\" class=\"headerlink\" title=\"Struts 2 简介\"></a>Struts 2 简介</h1><p>Apache Struts 2是一个用于开发Java EE网络应用程序的开源框架。它利用并延伸了Java Servlet API，鼓励开发者采用MVC架构。<br>Struts 2 与Struts 1 有很大的不同，它缘起于Apache的WebWork框架，旨在提供相对于Struts1框架的增强和改进，同时保留与Struts1框架类似的结构。但实质是以WebWork为核心。2005年12月，WebWork宣布WebWork 2.2以Apache Struts 2的名义合并至Struts。</p>\n<h1 id=\"Struts-2-原理\"><a href=\"#Struts-2-原理\" class=\"headerlink\" title=\"Struts 2 原理\"></a>Struts 2 原理</h1><h3 id=\"Struts-2-结构图\"><a href=\"#Struts-2-结构图\" class=\"headerlink\" title=\"Struts 2 结构图:\"></a>Struts 2 结构图:</h3><p><img src=\"/images/StrutsPrinciple.png\" alt=\"\"></p>\n<h3 id=\"Struts-2-流程图\"><a href=\"#Struts-2-流程图\" class=\"headerlink\" title=\"Struts 2 流程图:\"></a>Struts 2 流程图:</h3><p><img src=\"/images/StrutsProcess.jpg\" alt=\"\"></p>\n<h3 id=\"Struts-2-处理步骤\"><a href=\"#Struts-2-处理步骤\" class=\"headerlink\" title=\"Struts 2 处理步骤:\"></a>Struts 2 处理步骤:</h3><ol>\n<li>客户端发生一个请求（HttpServletRequest）；</li>\n<li>请求被Struts 2 中定义的三层过滤器（Filter）如：ActionCOntextCleanUp、SiteMesh、FilterDispatcher；</li>\n<li>FilterDisPatcher做为Struts 2 的控制器核心，询问ActionMapper是否需要调用某个Action来处理这个请求，如果决定调用,FilterDispatcher则把请求交给ActionProxy；</li>\n<li>ActionProxy通过Configuration Manager查询配置文件（struts.xml），找到需要调用的Action类。</li>\n<li>ActionProxy 创建一个ActionInvocation 的实例，同时ActionInvocation 通过代理模式调用Action。但在调用之前会根据配置文件加载所有与Action 相关的Interceptor；</li>\n<li>当Action 执行完毕后，ActionInvocation 负责根据配置文件找到相应的返回结果（struts.xml中action节点的result节点）并执行相关动作。</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"Struts-2-简介\"><a href=\"#Struts-2-简介\" class=\"headerlink\" title=\"Struts 2 简介\"></a>Struts 2 简介</h1><p>Apache Struts 2是一个用于开发Java EE网络应用程序的开源框架。它利用并延伸了Java Servlet API，鼓励开发者采用MVC架构。<br>Struts 2 与Struts 1 有很大的不同，它缘起于Apache的WebWork框架，旨在提供相对于Struts1框架的增强和改进，同时保留与Struts1框架类似的结构。但实质是以WebWork为核心。2005年12月，WebWork宣布WebWork 2.2以Apache Struts 2的名义合并至Struts。</p>\n<h1 id=\"Struts-2-原理\"><a href=\"#Struts-2-原理\" class=\"headerlink\" title=\"Struts 2 原理\"></a>Struts 2 原理</h1><h3 id=\"Struts-2-结构图\"><a href=\"#Struts-2-结构图\" class=\"headerlink\" title=\"Struts 2 结构图:\"></a>Struts 2 结构图:</h3><p><img src=\"/images/StrutsPrinciple.png\" alt=\"\"></p>\n<h3 id=\"Struts-2-流程图\"><a href=\"#Struts-2-流程图\" class=\"headerlink\" title=\"Struts 2 流程图:\"></a>Struts 2 流程图:</h3><p><img src=\"/images/StrutsProcess.jpg\" alt=\"\"></p>\n<h3 id=\"Struts-2-处理步骤\"><a href=\"#Struts-2-处理步骤\" class=\"headerlink\" title=\"Struts 2 处理步骤:\"></a>Struts 2 处理步骤:</h3><ol>\n<li>客户端发生一个请求（HttpServletRequest）；</li>\n<li>请求被Struts 2 中定义的三层过滤器（Filter）如：ActionCOntextCleanUp、SiteMesh、FilterDispatcher；</li>\n<li>FilterDisPatcher做为Struts 2 的控制器核心，询问ActionMapper是否需要调用某个Action来处理这个请求，如果决定调用,FilterDispatcher则把请求交给ActionProxy；</li>\n<li>ActionProxy通过Configuration Manager查询配置文件（struts.xml），找到需要调用的Action类。</li>\n<li>ActionProxy 创建一个ActionInvocation 的实例，同时ActionInvocation 通过代理模式调用Action。但在调用之前会根据配置文件加载所有与Action 相关的Interceptor；</li>\n<li>当Action 执行完毕后，ActionInvocation 负责根据配置文件找到相应的返回结果（struts.xml中action节点的result节点）并执行相关动作。</li>\n</ol>\n"},{"title":"JavaEE中servlet，filter，listener解析","date":"2017-07-24T13:59:43.000Z","_content":"web.xml 的加载顺序是：context-param -> listener -> filter -> servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。\n# Filter #\n它使用户可以改变一个 request和修改一个response. Filter 不是一个servlet,它不能产生一个response,它能够在一个request到达servlet之前预处理request,也可以在离开 servlet时处理response.换种说法,filter其实是一个”servlet chaining”(servlet 链).我们可以利用它来转换编码，权限验证等功能。\n1. 在 servlet 之前调用；\n2. 在 servlet 调用之前检查 request;\n3. 根据需要修改 request 和 response;\n4. 在 servlet 调用之后截获，继续修改相应数据;\n\n在实现 filter 中 doFilter 方法时必须调用 chain.doFilter(req,resp) 表示调用下一个 filter 或者最终请求。\n\n# Servlet #\nServlet是使用Java Servlet 应用程序设计接口（API）及相关类和方法的 Java 程序。除了 java Servlet API，Servlet 还可以使用用以扩展和添加到 API 的 Java 类软件包。Servlet 在启用 Java 的 Web 服务器上或应用服务器上运行并扩展了该服务器的能力。Java servlet对于Web服务器就好象Java applet对于Web浏览器。Servlet装入Web服务器并在Web服务器内执行，而applet装入Web浏览器并在Web浏览器内执行。Java Servlet API 定义了一个servlet 和Java使能的服务器之间的一个标准接口，这使得Servlets具有跨服务器平台的特性。\n\n### 它的拦截规则 ###\n当一个请求发送到servlet容器的时候，容器先会将请求的url减去当前应用上下文的路径作为servlet的映射url，比如我访问的是http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：\n\n1. 精确路径匹配。例子：比如servletA 的url-pattern为 /test，servletB的url-pattern为 /* ，这个时候，如果我访问的url为http://localhost/test ，这个时候容器就会先 进行精确路径匹配，发现/test正好被servletA精确匹配，那么就去调用servletA，也不会去理会其他的servlet了。\n2. 最长路径匹配。例子：servletA的url-pattern为/test/*，而servletB的url-pattern为/test/a/*，此时访问http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。\n3. 扩展匹配，如果url最后一段包含扩展，容器将会根据扩展选择合适的servlet。例子：servletA的url-pattern：*.action\n4. 如果前面三条规则都没有找到一个servlet，容器会根据url选择对应的请求资源。如果应用定义了一个default servlet，则容器会将请求丢给default servlet\n\n# Listener #\n它是基于观察者模式设计的。目前 Servlet 中提供了 5 种两类事件的观察者接口，我们实现它们，然后在 web.xml 里配置好就可以使用监听器了，它们分别是：4 个 EventListeners 类型的，ServletContextAttributeListener、ServletRequestAttributeListener、ServletRequestListener、HttpSessionAttributeListener 和 2 个 LifecycleListeners 类型的，ServletContextListener、HttpSessionListener。作为 Servlet 的监听器，它可以监听客户端的请求，服务端的操作等。比如监听在线用户数量：当增加一个 session 时，就触发 sessionCreated 方法，将人数加 1。\n\n","source":"_posts/JavaEE中servlet，filter，listener解析-2017-7-24.md","raw":"---\ntitle: JavaEE中servlet，filter，listener解析\ncategories: Java\ndate: 2017-07-24 21:59:43\n---\nweb.xml 的加载顺序是：context-param -> listener -> filter -> servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。\n# Filter #\n它使用户可以改变一个 request和修改一个response. Filter 不是一个servlet,它不能产生一个response,它能够在一个request到达servlet之前预处理request,也可以在离开 servlet时处理response.换种说法,filter其实是一个”servlet chaining”(servlet 链).我们可以利用它来转换编码，权限验证等功能。\n1. 在 servlet 之前调用；\n2. 在 servlet 调用之前检查 request;\n3. 根据需要修改 request 和 response;\n4. 在 servlet 调用之后截获，继续修改相应数据;\n\n在实现 filter 中 doFilter 方法时必须调用 chain.doFilter(req,resp) 表示调用下一个 filter 或者最终请求。\n\n# Servlet #\nServlet是使用Java Servlet 应用程序设计接口（API）及相关类和方法的 Java 程序。除了 java Servlet API，Servlet 还可以使用用以扩展和添加到 API 的 Java 类软件包。Servlet 在启用 Java 的 Web 服务器上或应用服务器上运行并扩展了该服务器的能力。Java servlet对于Web服务器就好象Java applet对于Web浏览器。Servlet装入Web服务器并在Web服务器内执行，而applet装入Web浏览器并在Web浏览器内执行。Java Servlet API 定义了一个servlet 和Java使能的服务器之间的一个标准接口，这使得Servlets具有跨服务器平台的特性。\n\n### 它的拦截规则 ###\n当一个请求发送到servlet容器的时候，容器先会将请求的url减去当前应用上下文的路径作为servlet的映射url，比如我访问的是http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：\n\n1. 精确路径匹配。例子：比如servletA 的url-pattern为 /test，servletB的url-pattern为 /* ，这个时候，如果我访问的url为http://localhost/test ，这个时候容器就会先 进行精确路径匹配，发现/test正好被servletA精确匹配，那么就去调用servletA，也不会去理会其他的servlet了。\n2. 最长路径匹配。例子：servletA的url-pattern为/test/*，而servletB的url-pattern为/test/a/*，此时访问http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。\n3. 扩展匹配，如果url最后一段包含扩展，容器将会根据扩展选择合适的servlet。例子：servletA的url-pattern：*.action\n4. 如果前面三条规则都没有找到一个servlet，容器会根据url选择对应的请求资源。如果应用定义了一个default servlet，则容器会将请求丢给default servlet\n\n# Listener #\n它是基于观察者模式设计的。目前 Servlet 中提供了 5 种两类事件的观察者接口，我们实现它们，然后在 web.xml 里配置好就可以使用监听器了，它们分别是：4 个 EventListeners 类型的，ServletContextAttributeListener、ServletRequestAttributeListener、ServletRequestListener、HttpSessionAttributeListener 和 2 个 LifecycleListeners 类型的，ServletContextListener、HttpSessionListener。作为 Servlet 的监听器，它可以监听客户端的请求，服务端的操作等。比如监听在线用户数量：当增加一个 session 时，就触发 sessionCreated 方法，将人数加 1。\n\n","slug":"JavaEE中servlet，filter，listener解析","published":1,"updated":"2017-07-24T14:23:46.973Z","_id":"cj5i8r3si0003l29vzbeyumwl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>web.xml 的加载顺序是：context-param -&gt; listener -&gt; filter -&gt; servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。</p>\n<h1 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h1><p>它使用户可以改变一个 request和修改一个response. Filter 不是一个servlet,它不能产生一个response,它能够在一个request到达servlet之前预处理request,也可以在离开 servlet时处理response.换种说法,filter其实是一个”servlet chaining”(servlet 链).我们可以利用它来转换编码，权限验证等功能。</p>\n<ol>\n<li>在 servlet 之前调用；</li>\n<li>在 servlet 调用之前检查 request;</li>\n<li>根据需要修改 request 和 response;</li>\n<li>在 servlet 调用之后截获，继续修改相应数据;</li>\n</ol>\n<p>在实现 filter 中 doFilter 方法时必须调用 chain.doFilter(req,resp) 表示调用下一个 filter 或者最终请求。</p>\n<h1 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h1><p>Servlet是使用Java Servlet 应用程序设计接口（API）及相关类和方法的 Java 程序。除了 java Servlet API，Servlet 还可以使用用以扩展和添加到 API 的 Java 类软件包。Servlet 在启用 Java 的 Web 服务器上或应用服务器上运行并扩展了该服务器的能力。Java servlet对于Web服务器就好象Java applet对于Web浏览器。Servlet装入Web服务器并在Web服务器内执行，而applet装入Web浏览器并在Web浏览器内执行。Java Servlet API 定义了一个servlet 和Java使能的服务器之间的一个标准接口，这使得Servlets具有跨服务器平台的特性。</p>\n<h3 id=\"它的拦截规则\"><a href=\"#它的拦截规则\" class=\"headerlink\" title=\"它的拦截规则\"></a>它的拦截规则</h3><p>当一个请求发送到servlet容器的时候，容器先会将请求的url减去当前应用上下文的路径作为servlet的映射url，比如我访问的是<a href=\"http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：\" target=\"_blank\" rel=\"external\">http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：</a></p>\n<ol>\n<li>精确路径匹配。例子：比如servletA 的url-pattern为 /test，servletB的url-pattern为 /* ，这个时候，如果我访问的url为<a href=\"http://localhost/test\" target=\"_blank\" rel=\"external\">http://localhost/test</a> ，这个时候容器就会先 进行精确路径匹配，发现/test正好被servletA精确匹配，那么就去调用servletA，也不会去理会其他的servlet了。</li>\n<li>最长路径匹配。例子：servletA的url-pattern为/test/<em>，而servletB的url-pattern为/test/a/</em>，此时访问<a href=\"http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。\" target=\"_blank\" rel=\"external\">http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。</a></li>\n<li>扩展匹配，如果url最后一段包含扩展，容器将会根据扩展选择合适的servlet。例子：servletA的url-pattern：*.action</li>\n<li>如果前面三条规则都没有找到一个servlet，容器会根据url选择对应的请求资源。如果应用定义了一个default servlet，则容器会将请求丢给default servlet</li>\n</ol>\n<h1 id=\"Listener\"><a href=\"#Listener\" class=\"headerlink\" title=\"Listener\"></a>Listener</h1><p>它是基于观察者模式设计的。目前 Servlet 中提供了 5 种两类事件的观察者接口，我们实现它们，然后在 web.xml 里配置好就可以使用监听器了，它们分别是：4 个 EventListeners 类型的，ServletContextAttributeListener、ServletRequestAttributeListener、ServletRequestListener、HttpSessionAttributeListener 和 2 个 LifecycleListeners 类型的，ServletContextListener、HttpSessionListener。作为 Servlet 的监听器，它可以监听客户端的请求，服务端的操作等。比如监听在线用户数量：当增加一个 session 时，就触发 sessionCreated 方法，将人数加 1。</p>\n","excerpt":"","more":"<p>web.xml 的加载顺序是：context-param -&gt; listener -&gt; filter -&gt; servlet ，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的。</p>\n<h1 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h1><p>它使用户可以改变一个 request和修改一个response. Filter 不是一个servlet,它不能产生一个response,它能够在一个request到达servlet之前预处理request,也可以在离开 servlet时处理response.换种说法,filter其实是一个”servlet chaining”(servlet 链).我们可以利用它来转换编码，权限验证等功能。</p>\n<ol>\n<li>在 servlet 之前调用；</li>\n<li>在 servlet 调用之前检查 request;</li>\n<li>根据需要修改 request 和 response;</li>\n<li>在 servlet 调用之后截获，继续修改相应数据;</li>\n</ol>\n<p>在实现 filter 中 doFilter 方法时必须调用 chain.doFilter(req,resp) 表示调用下一个 filter 或者最终请求。</p>\n<h1 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h1><p>Servlet是使用Java Servlet 应用程序设计接口（API）及相关类和方法的 Java 程序。除了 java Servlet API，Servlet 还可以使用用以扩展和添加到 API 的 Java 类软件包。Servlet 在启用 Java 的 Web 服务器上或应用服务器上运行并扩展了该服务器的能力。Java servlet对于Web服务器就好象Java applet对于Web浏览器。Servlet装入Web服务器并在Web服务器内执行，而applet装入Web浏览器并在Web浏览器内执行。Java Servlet API 定义了一个servlet 和Java使能的服务器之间的一个标准接口，这使得Servlets具有跨服务器平台的特性。</p>\n<h3 id=\"它的拦截规则\"><a href=\"#它的拦截规则\" class=\"headerlink\" title=\"它的拦截规则\"></a>它的拦截规则</h3><p>当一个请求发送到servlet容器的时候，容器先会将请求的url减去当前应用上下文的路径作为servlet的映射url，比如我访问的是<a href=\"http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：\">http://localhost/test/aaa.html，我的应用上下文是test，容器会将http://localhost/test去掉，剩下的/aaa.html部分拿来做servlet的映射匹配。这个映射匹配过程是有顺序的，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了（filter不同，后文会提到）。其匹配规则和顺序如下：</a></p>\n<ol>\n<li>精确路径匹配。例子：比如servletA 的url-pattern为 /test，servletB的url-pattern为 /* ，这个时候，如果我访问的url为<a href=\"http://localhost/test\">http://localhost/test</a> ，这个时候容器就会先 进行精确路径匹配，发现/test正好被servletA精确匹配，那么就去调用servletA，也不会去理会其他的servlet了。</li>\n<li>最长路径匹配。例子：servletA的url-pattern为/test/<em>，而servletB的url-pattern为/test/a/</em>，此时访问<a href=\"http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。\">http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。</a></li>\n<li>扩展匹配，如果url最后一段包含扩展，容器将会根据扩展选择合适的servlet。例子：servletA的url-pattern：*.action</li>\n<li>如果前面三条规则都没有找到一个servlet，容器会根据url选择对应的请求资源。如果应用定义了一个default servlet，则容器会将请求丢给default servlet</li>\n</ol>\n<h1 id=\"Listener\"><a href=\"#Listener\" class=\"headerlink\" title=\"Listener\"></a>Listener</h1><p>它是基于观察者模式设计的。目前 Servlet 中提供了 5 种两类事件的观察者接口，我们实现它们，然后在 web.xml 里配置好就可以使用监听器了，它们分别是：4 个 EventListeners 类型的，ServletContextAttributeListener、ServletRequestAttributeListener、ServletRequestListener、HttpSessionAttributeListener 和 2 个 LifecycleListeners 类型的，ServletContextListener、HttpSessionListener。作为 Servlet 的监听器，它可以监听客户端的请求，服务端的操作等。比如监听在线用户数量：当增加一个 session 时，就触发 sessionCreated 方法，将人数加 1。</p>\n"},{"title":"Maven将java项目打包成可独立运行的jar包","date":"2017-04-04T05:03:26.000Z","_content":"\n在java项目中，常常需要打包成独立jar包方便发送或者发放。而maven默认的打包插件并没有在项目清单MANIFEST.MF中添加主类和依赖信息，所以运行时就会出错。所以我们需要使用其它的插件来打包。\n### 方法一 使用maven-assembly-plugin插件 ###\n```xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-assembly-plugin</artifactId>  \n            <version>2.5.5</version>  \n            <configuration>  \n                <archive>  \n                    <manifest>  \n                        <mainClass>com.xxg.Main</mainClass>  \n                    </manifest>  \n                </archive>  \n                <descriptorRefs>  \n                    <descriptorRef>jar-with-dependencies</descriptorRef>  \n                </descriptorRefs>  \n            </configuration>  \n            <executions>  \n                <execution>  \n                    <id>make-assembly</id>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>single</goal>  \n                    </goals>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build>\n```\n### 方法二 使用maven-shade-plugin插件 ###\n```xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-shade-plugin</artifactId>  \n            <version>2.4.1</version>  \n            <executions>  \n                <execution>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>shade</goal>  \n                    </goals>  \n                    <configuration>  \n                        <transformers>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">  \n                                <mainClass>com.xxg.Main</mainClass>  \n                            </transformer>  \n                        </transformers>  \n                    </configuration>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build> \n```\n### 如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并 ###\n``` xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-shade-plugin</artifactId>  \n            <version>2.4.1</version>  \n            <executions>  \n                <execution>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>shade</goal>  \n                    </goals>  \n                    <configuration>  \n                        <transformers>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">  \n                                <mainClass>com.xxg.Main</mainClass>  \n                            </transformer>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.AppendingTransformer\">  \n                                <resource>META-INF/spring.handlers</resource>  \n                            </transformer>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.AppendingTransformer\">  \n                                <resource>META-INF/spring.schemas</resource>  \n                            </transformer>  \n                        </transformers>  \n                    </configuration>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build>  \n```\n### 引用 ###\n> http://blog.csdn.net/daiyutage/article/details/53739452\n","source":"_posts/Maven将java项目打包成可独立运行的jar包-2017-4-4.md","raw":"---\ntitle: Maven将java项目打包成可独立运行的jar包\ncategories: 其它\ndate: 2017-04-04 13:03:26\n---\n\n在java项目中，常常需要打包成独立jar包方便发送或者发放。而maven默认的打包插件并没有在项目清单MANIFEST.MF中添加主类和依赖信息，所以运行时就会出错。所以我们需要使用其它的插件来打包。\n### 方法一 使用maven-assembly-plugin插件 ###\n```xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-assembly-plugin</artifactId>  \n            <version>2.5.5</version>  \n            <configuration>  \n                <archive>  \n                    <manifest>  \n                        <mainClass>com.xxg.Main</mainClass>  \n                    </manifest>  \n                </archive>  \n                <descriptorRefs>  \n                    <descriptorRef>jar-with-dependencies</descriptorRef>  \n                </descriptorRefs>  \n            </configuration>  \n            <executions>  \n                <execution>  \n                    <id>make-assembly</id>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>single</goal>  \n                    </goals>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build>\n```\n### 方法二 使用maven-shade-plugin插件 ###\n```xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-shade-plugin</artifactId>  \n            <version>2.4.1</version>  \n            <executions>  \n                <execution>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>shade</goal>  \n                    </goals>  \n                    <configuration>  \n                        <transformers>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">  \n                                <mainClass>com.xxg.Main</mainClass>  \n                            </transformer>  \n                        </transformers>  \n                    </configuration>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build> \n```\n### 如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并 ###\n``` xml\n<build>  \n    <plugins>  \n  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-shade-plugin</artifactId>  \n            <version>2.4.1</version>  \n            <executions>  \n                <execution>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>shade</goal>  \n                    </goals>  \n                    <configuration>  \n                        <transformers>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">  \n                                <mainClass>com.xxg.Main</mainClass>  \n                            </transformer>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.AppendingTransformer\">  \n                                <resource>META-INF/spring.handlers</resource>  \n                            </transformer>  \n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.AppendingTransformer\">  \n                                <resource>META-INF/spring.schemas</resource>  \n                            </transformer>  \n                        </transformers>  \n                    </configuration>  \n                </execution>  \n            </executions>  \n        </plugin>  \n  \n    </plugins>  \n</build>  \n```\n### 引用 ###\n> http://blog.csdn.net/daiyutage/article/details/53739452\n","slug":"Maven将java项目打包成可独立运行的jar包","published":1,"updated":"2017-04-04T05:28:31.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3sl0004l29vrg68i50p","content":"<p>在java项目中，常常需要打包成独立jar包方便发送或者发放。而maven默认的打包插件并没有在项目清单MANIFEST.MF中添加主类和依赖信息，所以运行时就会出错。所以我们需要使用其它的插件来打包。</p>\n<h3 id=\"方法一-使用maven-assembly-plugin插件\"><a href=\"#方法一-使用maven-assembly-plugin插件\" class=\"headerlink\" title=\"方法一 使用maven-assembly-plugin插件\"></a>方法一 使用maven-assembly-plugin插件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-assembly-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">descriptorRefs</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">descriptorRef</span>&gt;</span>jar-with-dependencies<span class=\"tag\">&lt;/<span class=\"name\">descriptorRef</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">descriptorRefs</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>make-assembly<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>single<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法二-使用maven-shade-plugin插件\"><a href=\"#方法二-使用maven-shade-plugin插件\" class=\"headerlink\" title=\"方法二 使用maven-shade-plugin插件\"></a>方法二 使用maven-shade-plugin插件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-shade-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>shade<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"如果使用了Spring，Spring-Framework的多个jar包中包含相同的文件spring-handlers和spring-schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\"><a href=\"#如果使用了Spring，Spring-Framework的多个jar包中包含相同的文件spring-handlers和spring-schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\" class=\"headerlink\" title=\"如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\"></a>如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-shade-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>shade<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.AppendingTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span>META-INF/spring.handlers<span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.AppendingTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span>META-INF/spring.schemas<span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p><a href=\"http://blog.csdn.net/daiyutage/article/details/53739452\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/daiyutage/article/details/53739452</a></p>\n</blockquote>\n","excerpt":"","more":"<p>在java项目中，常常需要打包成独立jar包方便发送或者发放。而maven默认的打包插件并没有在项目清单MANIFEST.MF中添加主类和依赖信息，所以运行时就会出错。所以我们需要使用其它的插件来打包。</p>\n<h3 id=\"方法一-使用maven-assembly-plugin插件\"><a href=\"#方法一-使用maven-assembly-plugin插件\" class=\"headerlink\" title=\"方法一 使用maven-assembly-plugin插件\"></a>方法一 使用maven-assembly-plugin插件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-assembly-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">descriptorRefs</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">descriptorRef</span>&gt;</span>jar-with-dependencies<span class=\"tag\">&lt;/<span class=\"name\">descriptorRef</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">descriptorRefs</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>make-assembly<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>single<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"方法二-使用maven-shade-plugin插件\"><a href=\"#方法二-使用maven-shade-plugin插件\" class=\"headerlink\" title=\"方法二 使用maven-shade-plugin插件\"></a>方法二 使用maven-shade-plugin插件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-shade-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>shade<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"如果使用了Spring，Spring-Framework的多个jar包中包含相同的文件spring-handlers和spring-schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\"><a href=\"#如果使用了Spring，Spring-Framework的多个jar包中包含相同的文件spring-handlers和spring-schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\" class=\"headerlink\" title=\"如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并\"></a>如果使用了Spring，Spring Framework的多个jar包中包含相同的文件spring.handlers和spring.schemas，如果生成一个jar包会互相覆盖。为了避免互相影响，可以使用AppendingTransformer来对文件内容追加合并</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-shade-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>shade<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.xxg.Main<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.AppendingTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span>META-INF/spring.handlers<span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">transformer</span> <span class=\"attr\">implementation</span>=<span class=\"string\">\"org.apache.maven.plugins.shade.resource.AppendingTransformer\"</span>&gt;</span>  </div><div class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span>META-INF/spring.schemas<span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span>  </div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">transformer</span>&gt;</span>  </div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">transformers</span>&gt;</span>  </div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><blockquote>\n<p><a href=\"http://blog.csdn.net/daiyutage/article/details/53739452\">http://blog.csdn.net/daiyutage/article/details/53739452</a></p>\n</blockquote>\n"},{"title":"Mysql 优化","date":"2017-06-16T06:55:24.000Z","_content":"当面对一个 SQL 性能问题时，我们应该从何处找到问题，哪里用的时间过多，我们才能着手优化。\n# 查看本次连接信息: #\n> status\n\n# 查看服务器提供的状态信息: #\n> show [session|global] status\n\n1. Com_select:执行 select 操作的次数，一次查询值累加 1；\n2. Com_Insert:执行 insert 操作的次数；\n3. Com_update:执行 update 的次数；\n4. Com_delete:执行 delete 的次数；\n5. Innodb_rows_read:执行 select 查询返回的行数；\n6. Innodb_rows_inserted:执行 insert 操作插入的行数;\n7. Innodb_rows_updated:执行 update 操作更新的行数；\n8. Innodb_rows_deleted:执行 delete操作删除的行数；\n9. Com_commit:事务提交次数；\n10. Com_rollback:事务回滚的次数；\n11. Handler_read_key:表明系统正在使用索引，越高越好；\n12. Handler_read_next:使用索引读取数据的次数；\n12. Handler_read_rnd_next:表示在数据文件读取数据的次数，如果值很大，说明应该使用索引。\n\n通过上述参数的值我们可以很容易的了解当前数据库是以插入更新为主还是以查询操作为主，以及各种类型的 SQL 大致执行比例是多少。对于更新操作的计数，是对执行次数的计数，无论是提交还是回滚都会计数。如果回滚非常频繁，意味着应用编写可能存在问题。\n\n# 通过 EXPLAIN 分析 SQL 语句的执行计划 #\n> explain sql语句\\G\n\n* select_type: 表示 select 的类型，常见取值有 SIMPLE（简单表，没有使用表连接或子查询），PRIMARY（主查询），UNION（UNION 中的第二个或者后面的查询语句），SUBQUERY（子查询中的第一个 SELECT）等。\n* type:表示 Mysql 在表中查询的方式，或者叫访问类型。ALL（全表扫描），index（索引全扫描，遍历整个索引），range（索引范围扫描，常见于比较符 < >等），ref（索引的前缀扫描，返回匹配某个单独值的记录），const/system（表中最多只有一个匹配行，根据主键或唯一索引查询时），速度依次变快。\n* possible_keys:表示查询时可能用到的索引；\n* key:表示实际用的索引；\n* key_len:使用到索引字段的长度；\n* rows:总共扫描了多少行；\n\n# 通过 show profile 分析 SQL 执行详细时间 #\n> select @@having_profiling; 查看是否支持 profile\n> set profiling=1; 开启 profile 功能\n> show profiles; 查看每个执行的 SQL 语句的 QUERY ID\n> show profile for query id; 查看该语句执行过程中每个状态的消耗时间\n> show profile [all|cpu|block|io|context|switch|page faults]查看在某个资源所耗时间\n\n# Mysql 中使用索引的场景 #\n* 匹配全值，即对索引中的列都指定具体值。\n> select * from table where col1='xxx' and col2='xxx';其中col1，col2都有索引\n* 匹配值的范围查询，对索引的值进行范围查找。\n> select * from table where col>=1 and col<=100;\n* 匹配最左前缀，仅仅使用索引中的最左边列进行查找，比如 col1+col2+col3 字段的联合索引能被包含 col1,(col1,col2),(col1,col2,col3)的等值查询利用，不能被 col2,col3,(col2,col3)的等值查询利用。\n> select * from table where col1='xxx';\n> select * from table where col1='xxx' and col2='xxx';\n> select * from table where col1='xxx' and col2='xxx' and col3='xxx';\n* 仅仅对索引进行查询，当查询的列都在索引的字段中。\n> select col1,col2,col3 from table;\n* 匹配列前缀，仅仅使用索引的第一列，并且只包含索引第一列的开头部分进行查找。\n> select * from table where col like 'xxxx%';\n* 索引匹配部分精确，其它部分范围匹配。\n> select * from table where col1='xxx' and col2>=1 and col2<=100;\n* 使用 col is null 条件会使用索引\n> select * from table where col is null;\n\n# 存在索引但是不能使用索引的场景 #\n* 以%开头的like查询不能利用 B-Tree 索引。\n> select * from table where col like '%xxx';\n* 数据类型出现隐式转换是不会使用索引，特别是列类型为字符串时，一定要用引号引起来。\n> select * from table where col=123; 其中col列类型为字符串\n* 复合索引中，如果查询条件中不包含索引列的最左部分，不使用索引。\n> select * from table where col2='xxx' and col3='xxx';\n* 如果 Mysql 估计使用索引比全表扫描更慢，则不使用索引。\n* 用 or 分割开的条件，如果 or 前的条件中的列有索引，而后面没有，同样不会使用索引。\n> select * from table where col1='xxx' or col2='xxx';其中 col1 有索引，而 col2 没有索引\n\n\n","source":"_posts/Mysql-优化常见命令-2017-6-16.md","raw":"---\ntitle: Mysql 优化\ncategories: 数据库\ndate: 2017-06-16 14:55:24\ntag: Mysql\n---\n当面对一个 SQL 性能问题时，我们应该从何处找到问题，哪里用的时间过多，我们才能着手优化。\n# 查看本次连接信息: #\n> status\n\n# 查看服务器提供的状态信息: #\n> show [session|global] status\n\n1. Com_select:执行 select 操作的次数，一次查询值累加 1；\n2. Com_Insert:执行 insert 操作的次数；\n3. Com_update:执行 update 的次数；\n4. Com_delete:执行 delete 的次数；\n5. Innodb_rows_read:执行 select 查询返回的行数；\n6. Innodb_rows_inserted:执行 insert 操作插入的行数;\n7. Innodb_rows_updated:执行 update 操作更新的行数；\n8. Innodb_rows_deleted:执行 delete操作删除的行数；\n9. Com_commit:事务提交次数；\n10. Com_rollback:事务回滚的次数；\n11. Handler_read_key:表明系统正在使用索引，越高越好；\n12. Handler_read_next:使用索引读取数据的次数；\n12. Handler_read_rnd_next:表示在数据文件读取数据的次数，如果值很大，说明应该使用索引。\n\n通过上述参数的值我们可以很容易的了解当前数据库是以插入更新为主还是以查询操作为主，以及各种类型的 SQL 大致执行比例是多少。对于更新操作的计数，是对执行次数的计数，无论是提交还是回滚都会计数。如果回滚非常频繁，意味着应用编写可能存在问题。\n\n# 通过 EXPLAIN 分析 SQL 语句的执行计划 #\n> explain sql语句\\G\n\n* select_type: 表示 select 的类型，常见取值有 SIMPLE（简单表，没有使用表连接或子查询），PRIMARY（主查询），UNION（UNION 中的第二个或者后面的查询语句），SUBQUERY（子查询中的第一个 SELECT）等。\n* type:表示 Mysql 在表中查询的方式，或者叫访问类型。ALL（全表扫描），index（索引全扫描，遍历整个索引），range（索引范围扫描，常见于比较符 < >等），ref（索引的前缀扫描，返回匹配某个单独值的记录），const/system（表中最多只有一个匹配行，根据主键或唯一索引查询时），速度依次变快。\n* possible_keys:表示查询时可能用到的索引；\n* key:表示实际用的索引；\n* key_len:使用到索引字段的长度；\n* rows:总共扫描了多少行；\n\n# 通过 show profile 分析 SQL 执行详细时间 #\n> select @@having_profiling; 查看是否支持 profile\n> set profiling=1; 开启 profile 功能\n> show profiles; 查看每个执行的 SQL 语句的 QUERY ID\n> show profile for query id; 查看该语句执行过程中每个状态的消耗时间\n> show profile [all|cpu|block|io|context|switch|page faults]查看在某个资源所耗时间\n\n# Mysql 中使用索引的场景 #\n* 匹配全值，即对索引中的列都指定具体值。\n> select * from table where col1='xxx' and col2='xxx';其中col1，col2都有索引\n* 匹配值的范围查询，对索引的值进行范围查找。\n> select * from table where col>=1 and col<=100;\n* 匹配最左前缀，仅仅使用索引中的最左边列进行查找，比如 col1+col2+col3 字段的联合索引能被包含 col1,(col1,col2),(col1,col2,col3)的等值查询利用，不能被 col2,col3,(col2,col3)的等值查询利用。\n> select * from table where col1='xxx';\n> select * from table where col1='xxx' and col2='xxx';\n> select * from table where col1='xxx' and col2='xxx' and col3='xxx';\n* 仅仅对索引进行查询，当查询的列都在索引的字段中。\n> select col1,col2,col3 from table;\n* 匹配列前缀，仅仅使用索引的第一列，并且只包含索引第一列的开头部分进行查找。\n> select * from table where col like 'xxxx%';\n* 索引匹配部分精确，其它部分范围匹配。\n> select * from table where col1='xxx' and col2>=1 and col2<=100;\n* 使用 col is null 条件会使用索引\n> select * from table where col is null;\n\n# 存在索引但是不能使用索引的场景 #\n* 以%开头的like查询不能利用 B-Tree 索引。\n> select * from table where col like '%xxx';\n* 数据类型出现隐式转换是不会使用索引，特别是列类型为字符串时，一定要用引号引起来。\n> select * from table where col=123; 其中col列类型为字符串\n* 复合索引中，如果查询条件中不包含索引列的最左部分，不使用索引。\n> select * from table where col2='xxx' and col3='xxx';\n* 如果 Mysql 估计使用索引比全表扫描更慢，则不使用索引。\n* 用 or 分割开的条件，如果 or 前的条件中的列有索引，而后面没有，同样不会使用索引。\n> select * from table where col1='xxx' or col2='xxx';其中 col1 有索引，而 col2 没有索引\n\n\n","slug":"Mysql-优化常见命令","published":1,"updated":"2017-06-16T13:58:51.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3sp0005l29vtb32effc","content":"<p>当面对一个 SQL 性能问题时，我们应该从何处找到问题，哪里用的时间过多，我们才能着手优化。</p>\n<h1 id=\"查看本次连接信息\"><a href=\"#查看本次连接信息\" class=\"headerlink\" title=\"查看本次连接信息:\"></a>查看本次连接信息:</h1><blockquote>\n<p>status</p>\n</blockquote>\n<h1 id=\"查看服务器提供的状态信息\"><a href=\"#查看服务器提供的状态信息\" class=\"headerlink\" title=\"查看服务器提供的状态信息:\"></a>查看服务器提供的状态信息:</h1><blockquote>\n<p>show [session|global] status</p>\n</blockquote>\n<ol>\n<li>Com_select:执行 select 操作的次数，一次查询值累加 1；</li>\n<li>Com_Insert:执行 insert 操作的次数；</li>\n<li>Com_update:执行 update 的次数；</li>\n<li>Com_delete:执行 delete 的次数；</li>\n<li>Innodb_rows_read:执行 select 查询返回的行数；</li>\n<li>Innodb_rows_inserted:执行 insert 操作插入的行数;</li>\n<li>Innodb_rows_updated:执行 update 操作更新的行数；</li>\n<li>Innodb_rows_deleted:执行 delete操作删除的行数；</li>\n<li>Com_commit:事务提交次数；</li>\n<li>Com_rollback:事务回滚的次数；</li>\n<li>Handler_read_key:表明系统正在使用索引，越高越好；</li>\n<li>Handler_read_next:使用索引读取数据的次数；</li>\n<li>Handler_read_rnd_next:表示在数据文件读取数据的次数，如果值很大，说明应该使用索引。</li>\n</ol>\n<p>通过上述参数的值我们可以很容易的了解当前数据库是以插入更新为主还是以查询操作为主，以及各种类型的 SQL 大致执行比例是多少。对于更新操作的计数，是对执行次数的计数，无论是提交还是回滚都会计数。如果回滚非常频繁，意味着应用编写可能存在问题。</p>\n<h1 id=\"通过-EXPLAIN-分析-SQL-语句的执行计划\"><a href=\"#通过-EXPLAIN-分析-SQL-语句的执行计划\" class=\"headerlink\" title=\"通过 EXPLAIN 分析 SQL 语句的执行计划\"></a>通过 EXPLAIN 分析 SQL 语句的执行计划</h1><blockquote>\n<p>explain sql语句\\G</p>\n</blockquote>\n<ul>\n<li>select_type: 表示 select 的类型，常见取值有 SIMPLE（简单表，没有使用表连接或子查询），PRIMARY（主查询），UNION（UNION 中的第二个或者后面的查询语句），SUBQUERY（子查询中的第一个 SELECT）等。</li>\n<li>type:表示 Mysql 在表中查询的方式，或者叫访问类型。ALL（全表扫描），index（索引全扫描，遍历整个索引），range（索引范围扫描，常见于比较符 &lt; &gt;等），ref（索引的前缀扫描，返回匹配某个单独值的记录），const/system（表中最多只有一个匹配行，根据主键或唯一索引查询时），速度依次变快。</li>\n<li>possible_keys:表示查询时可能用到的索引；</li>\n<li>key:表示实际用的索引；</li>\n<li>key_len:使用到索引字段的长度；</li>\n<li>rows:总共扫描了多少行；</li>\n</ul>\n<h1 id=\"通过-show-profile-分析-SQL-执行详细时间\"><a href=\"#通过-show-profile-分析-SQL-执行详细时间\" class=\"headerlink\" title=\"通过 show profile 分析 SQL 执行详细时间\"></a>通过 show profile 分析 SQL 执行详细时间</h1><blockquote>\n<p>select @@having_profiling; 查看是否支持 profile<br>set profiling=1; 开启 profile 功能<br>show profiles; 查看每个执行的 SQL 语句的 QUERY ID<br>show profile for query id; 查看该语句执行过程中每个状态的消耗时间<br>show profile [all|cpu|block|io|context|switch|page faults]查看在某个资源所耗时间</p>\n</blockquote>\n<h1 id=\"Mysql-中使用索引的场景\"><a href=\"#Mysql-中使用索引的场景\" class=\"headerlink\" title=\"Mysql 中使用索引的场景\"></a>Mysql 中使用索引的场景</h1><ul>\n<li>匹配全值，即对索引中的列都指定具体值。<blockquote>\n<p>select * from table where col1=’xxx’ and col2=’xxx’;其中col1，col2都有索引</p>\n</blockquote>\n</li>\n<li>匹配值的范围查询，对索引的值进行范围查找。<blockquote>\n<p>select * from table where col&gt;=1 and col&lt;=100;</p>\n</blockquote>\n</li>\n<li>匹配最左前缀，仅仅使用索引中的最左边列进行查找，比如 col1+col2+col3 字段的联合索引能被包含 col1,(col1,col2),(col1,col2,col3)的等值查询利用，不能被 col2,col3,(col2,col3)的等值查询利用。<blockquote>\n<p>select <em> from table where col1=’xxx’;<br>select </em> from table where col1=’xxx’ and col2=’xxx’;<br>select * from table where col1=’xxx’ and col2=’xxx’ and col3=’xxx’;</p>\n</blockquote>\n</li>\n<li>仅仅对索引进行查询，当查询的列都在索引的字段中。<blockquote>\n<p>select col1,col2,col3 from table;</p>\n</blockquote>\n</li>\n<li>匹配列前缀，仅仅使用索引的第一列，并且只包含索引第一列的开头部分进行查找。<blockquote>\n<p>select * from table where col like ‘xxxx%’;</p>\n</blockquote>\n</li>\n<li>索引匹配部分精确，其它部分范围匹配。<blockquote>\n<p>select * from table where col1=’xxx’ and col2&gt;=1 and col2&lt;=100;</p>\n</blockquote>\n</li>\n<li>使用 col is null 条件会使用索引<blockquote>\n<p>select * from table where col is null;</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"存在索引但是不能使用索引的场景\"><a href=\"#存在索引但是不能使用索引的场景\" class=\"headerlink\" title=\"存在索引但是不能使用索引的场景\"></a>存在索引但是不能使用索引的场景</h1><ul>\n<li>以%开头的like查询不能利用 B-Tree 索引。<blockquote>\n<p>select * from table where col like ‘%xxx’;</p>\n</blockquote>\n</li>\n<li>数据类型出现隐式转换是不会使用索引，特别是列类型为字符串时，一定要用引号引起来。<blockquote>\n<p>select * from table where col=123; 其中col列类型为字符串</p>\n</blockquote>\n</li>\n<li>复合索引中，如果查询条件中不包含索引列的最左部分，不使用索引。<blockquote>\n<p>select * from table where col2=’xxx’ and col3=’xxx’;</p>\n</blockquote>\n</li>\n<li>如果 Mysql 估计使用索引比全表扫描更慢，则不使用索引。</li>\n<li>用 or 分割开的条件，如果 or 前的条件中的列有索引，而后面没有，同样不会使用索引。<blockquote>\n<p>select * from table where col1=’xxx’ or col2=’xxx’;其中 col1 有索引，而 col2 没有索引</p>\n</blockquote>\n</li>\n</ul>\n","excerpt":"","more":"<p>当面对一个 SQL 性能问题时，我们应该从何处找到问题，哪里用的时间过多，我们才能着手优化。</p>\n<h1 id=\"查看本次连接信息\"><a href=\"#查看本次连接信息\" class=\"headerlink\" title=\"查看本次连接信息:\"></a>查看本次连接信息:</h1><blockquote>\n<p>status</p>\n</blockquote>\n<h1 id=\"查看服务器提供的状态信息\"><a href=\"#查看服务器提供的状态信息\" class=\"headerlink\" title=\"查看服务器提供的状态信息:\"></a>查看服务器提供的状态信息:</h1><blockquote>\n<p>show [session|global] status</p>\n</blockquote>\n<ol>\n<li>Com_select:执行 select 操作的次数，一次查询值累加 1；</li>\n<li>Com_Insert:执行 insert 操作的次数；</li>\n<li>Com_update:执行 update 的次数；</li>\n<li>Com_delete:执行 delete 的次数；</li>\n<li>Innodb_rows_read:执行 select 查询返回的行数；</li>\n<li>Innodb_rows_inserted:执行 insert 操作插入的行数;</li>\n<li>Innodb_rows_updated:执行 update 操作更新的行数；</li>\n<li>Innodb_rows_deleted:执行 delete操作删除的行数；</li>\n<li>Com_commit:事务提交次数；</li>\n<li>Com_rollback:事务回滚的次数；</li>\n<li>Handler_read_key:表明系统正在使用索引，越高越好；</li>\n<li>Handler_read_next:使用索引读取数据的次数；</li>\n<li>Handler_read_rnd_next:表示在数据文件读取数据的次数，如果值很大，说明应该使用索引。</li>\n</ol>\n<p>通过上述参数的值我们可以很容易的了解当前数据库是以插入更新为主还是以查询操作为主，以及各种类型的 SQL 大致执行比例是多少。对于更新操作的计数，是对执行次数的计数，无论是提交还是回滚都会计数。如果回滚非常频繁，意味着应用编写可能存在问题。</p>\n<h1 id=\"通过-EXPLAIN-分析-SQL-语句的执行计划\"><a href=\"#通过-EXPLAIN-分析-SQL-语句的执行计划\" class=\"headerlink\" title=\"通过 EXPLAIN 分析 SQL 语句的执行计划\"></a>通过 EXPLAIN 分析 SQL 语句的执行计划</h1><blockquote>\n<p>explain sql语句\\G</p>\n</blockquote>\n<ul>\n<li>select_type: 表示 select 的类型，常见取值有 SIMPLE（简单表，没有使用表连接或子查询），PRIMARY（主查询），UNION（UNION 中的第二个或者后面的查询语句），SUBQUERY（子查询中的第一个 SELECT）等。</li>\n<li>type:表示 Mysql 在表中查询的方式，或者叫访问类型。ALL（全表扫描），index（索引全扫描，遍历整个索引），range（索引范围扫描，常见于比较符 &lt; &gt;等），ref（索引的前缀扫描，返回匹配某个单独值的记录），const/system（表中最多只有一个匹配行，根据主键或唯一索引查询时），速度依次变快。</li>\n<li>possible_keys:表示查询时可能用到的索引；</li>\n<li>key:表示实际用的索引；</li>\n<li>key_len:使用到索引字段的长度；</li>\n<li>rows:总共扫描了多少行；</li>\n</ul>\n<h1 id=\"通过-show-profile-分析-SQL-执行详细时间\"><a href=\"#通过-show-profile-分析-SQL-执行详细时间\" class=\"headerlink\" title=\"通过 show profile 分析 SQL 执行详细时间\"></a>通过 show profile 分析 SQL 执行详细时间</h1><blockquote>\n<p>select @@having_profiling; 查看是否支持 profile<br>set profiling=1; 开启 profile 功能<br>show profiles; 查看每个执行的 SQL 语句的 QUERY ID<br>show profile for query id; 查看该语句执行过程中每个状态的消耗时间<br>show profile [all|cpu|block|io|context|switch|page faults]查看在某个资源所耗时间</p>\n</blockquote>\n<h1 id=\"Mysql-中使用索引的场景\"><a href=\"#Mysql-中使用索引的场景\" class=\"headerlink\" title=\"Mysql 中使用索引的场景\"></a>Mysql 中使用索引的场景</h1><ul>\n<li>匹配全值，即对索引中的列都指定具体值。<blockquote>\n<p>select * from table where col1=’xxx’ and col2=’xxx’;其中col1，col2都有索引</p>\n</blockquote>\n</li>\n<li>匹配值的范围查询，对索引的值进行范围查找。<blockquote>\n<p>select * from table where col&gt;=1 and col&lt;=100;</p>\n</blockquote>\n</li>\n<li>匹配最左前缀，仅仅使用索引中的最左边列进行查找，比如 col1+col2+col3 字段的联合索引能被包含 col1,(col1,col2),(col1,col2,col3)的等值查询利用，不能被 col2,col3,(col2,col3)的等值查询利用。<blockquote>\n<p>select <em> from table where col1=’xxx’;<br>select </em> from table where col1=’xxx’ and col2=’xxx’;<br>select * from table where col1=’xxx’ and col2=’xxx’ and col3=’xxx’;</p>\n</blockquote>\n</li>\n<li>仅仅对索引进行查询，当查询的列都在索引的字段中。<blockquote>\n<p>select col1,col2,col3 from table;</p>\n</blockquote>\n</li>\n<li>匹配列前缀，仅仅使用索引的第一列，并且只包含索引第一列的开头部分进行查找。<blockquote>\n<p>select * from table where col like ‘xxxx%’;</p>\n</blockquote>\n</li>\n<li>索引匹配部分精确，其它部分范围匹配。<blockquote>\n<p>select * from table where col1=’xxx’ and col2&gt;=1 and col2&lt;=100;</p>\n</blockquote>\n</li>\n<li>使用 col is null 条件会使用索引<blockquote>\n<p>select * from table where col is null;</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"存在索引但是不能使用索引的场景\"><a href=\"#存在索引但是不能使用索引的场景\" class=\"headerlink\" title=\"存在索引但是不能使用索引的场景\"></a>存在索引但是不能使用索引的场景</h1><ul>\n<li>以%开头的like查询不能利用 B-Tree 索引。<blockquote>\n<p>select * from table where col like ‘%xxx’;</p>\n</blockquote>\n</li>\n<li>数据类型出现隐式转换是不会使用索引，特别是列类型为字符串时，一定要用引号引起来。<blockquote>\n<p>select * from table where col=123; 其中col列类型为字符串</p>\n</blockquote>\n</li>\n<li>复合索引中，如果查询条件中不包含索引列的最左部分，不使用索引。<blockquote>\n<p>select * from table where col2=’xxx’ and col3=’xxx’;</p>\n</blockquote>\n</li>\n<li>如果 Mysql 估计使用索引比全表扫描更慢，则不使用索引。</li>\n<li>用 or 分割开的条件，如果 or 前的条件中的列有索引，而后面没有，同样不会使用索引。<blockquote>\n<p>select * from table where col1=’xxx’ or col2=’xxx’;其中 col1 有索引，而 col2 没有索引</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"SQL 语句的优化","date":"2017-06-19T09:38:51.000Z","_content":"# 大批量插入数据 #\n1. 对于 MyISAM 储存引擎，可以用以下方式快速导入大量数据到一个非空表：\n> alter table tab_name disable keys;\n> load data infile 'data.txt' into table tab_name;\n> alter table tab_name enable keys;\n\n上述设置只对 MyISAM有用，对 InnoDB 表无用，因为 InnoDB 表是按主键顺序保存的，如果数据按照主键顺序排序，可以有效提高导入数据。\n\n2. 在导入前关闭唯一性校验，导入后再恢复，可以提高效率；\n> set unique_checks=0\n> load data infile 'data.txt' into table tab_name\n> set unique_checks=1\n\n3. 如果使用自动提交的方式，建议先关闭自动提交，导入后再打开，也可以提交效率；\n> set autocommit=0\n\n# 优化 insert 语句 #\n1. 如果同时从同一客户端插入多行，应用多个值表的 insert 语句，减少客户端与数据库之间的连接，关闭等消耗；\n2. 如果从不同客户端同时插入多行，可以通过 insert delayed 语句得到更高的速度，它让 insert 马上执行，只是先放到内存队列中，再慢慢写入磁盘；\n3. 将索引文件和数据文件分在不同的磁盘上存放；\n4. 如果进行批量插入，可以提高 bulk_insert_buffer_size 的值（只对 MyISAM 表使用）；\n5. 从一个文本载入数据时，load 比 insert 大约快 20 倍。\n\n# 优化分页查询 #\n一般分页查询时，都会用到“limit 1000,20”类似的语句，但这样 Mysql 是读取 1020 条记录，然后再返回最后 20 条，这样就耗时太大；\n1. 在索引上完成排序分页操作，最后根据主键关联会原表要查询的列；\n> select film_id, description from film order by title limit 50,5;\n> SELECT a.film_id, a.description from film a inner join (select film_id from film ORDER BY title limit 50,5)b on a.film_id=b.film_id;\n\n# 常用 SQL 技巧 #\n1. 运用正则表达式\n> select * from table where col reqexp 'exp';\n2. 用 rand() 提取随机行\n> select * from table order by rand() limit n;\n3. 利用 group by 的 with rollup 字句可以查询出分组的聚合信息\n> select col1,col2,sum(col3) from table group by col1;\n> select col1,col2,sum(col3) from table group by col1 with rollup;\n\n\n","source":"_posts/SQL-语句的优化-2017-6-19.md","raw":"---\ntitle: SQL 语句的优化\ncategories: 其它\ndate: 2017-06-19 17:38:51\ntag: SQL\n---\n# 大批量插入数据 #\n1. 对于 MyISAM 储存引擎，可以用以下方式快速导入大量数据到一个非空表：\n> alter table tab_name disable keys;\n> load data infile 'data.txt' into table tab_name;\n> alter table tab_name enable keys;\n\n上述设置只对 MyISAM有用，对 InnoDB 表无用，因为 InnoDB 表是按主键顺序保存的，如果数据按照主键顺序排序，可以有效提高导入数据。\n\n2. 在导入前关闭唯一性校验，导入后再恢复，可以提高效率；\n> set unique_checks=0\n> load data infile 'data.txt' into table tab_name\n> set unique_checks=1\n\n3. 如果使用自动提交的方式，建议先关闭自动提交，导入后再打开，也可以提交效率；\n> set autocommit=0\n\n# 优化 insert 语句 #\n1. 如果同时从同一客户端插入多行，应用多个值表的 insert 语句，减少客户端与数据库之间的连接，关闭等消耗；\n2. 如果从不同客户端同时插入多行，可以通过 insert delayed 语句得到更高的速度，它让 insert 马上执行，只是先放到内存队列中，再慢慢写入磁盘；\n3. 将索引文件和数据文件分在不同的磁盘上存放；\n4. 如果进行批量插入，可以提高 bulk_insert_buffer_size 的值（只对 MyISAM 表使用）；\n5. 从一个文本载入数据时，load 比 insert 大约快 20 倍。\n\n# 优化分页查询 #\n一般分页查询时，都会用到“limit 1000,20”类似的语句，但这样 Mysql 是读取 1020 条记录，然后再返回最后 20 条，这样就耗时太大；\n1. 在索引上完成排序分页操作，最后根据主键关联会原表要查询的列；\n> select film_id, description from film order by title limit 50,5;\n> SELECT a.film_id, a.description from film a inner join (select film_id from film ORDER BY title limit 50,5)b on a.film_id=b.film_id;\n\n# 常用 SQL 技巧 #\n1. 运用正则表达式\n> select * from table where col reqexp 'exp';\n2. 用 rand() 提取随机行\n> select * from table order by rand() limit n;\n3. 利用 group by 的 with rollup 字句可以查询出分组的聚合信息\n> select col1,col2,sum(col3) from table group by col1;\n> select col1,col2,sum(col3) from table group by col1 with rollup;\n\n\n","slug":"SQL-语句的优化","published":1,"updated":"2017-06-20T07:26:37.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3sr0007l29vu8krjjpu","content":"<h1 id=\"大批量插入数据\"><a href=\"#大批量插入数据\" class=\"headerlink\" title=\"大批量插入数据\"></a>大批量插入数据</h1><ol>\n<li>对于 MyISAM 储存引擎，可以用以下方式快速导入大量数据到一个非空表：<blockquote>\n<p>alter table tab_name disable keys;<br>load data infile ‘data.txt’ into table tab_name;<br>alter table tab_name enable keys;</p>\n</blockquote>\n</li>\n</ol>\n<p>上述设置只对 MyISAM有用，对 InnoDB 表无用，因为 InnoDB 表是按主键顺序保存的，如果数据按照主键顺序排序，可以有效提高导入数据。</p>\n<ol>\n<li><p>在导入前关闭唯一性校验，导入后再恢复，可以提高效率；</p>\n<blockquote>\n<p>set unique_checks=0<br>load data infile ‘data.txt’ into table tab_name<br>set unique_checks=1</p>\n</blockquote>\n</li>\n<li><p>如果使用自动提交的方式，建议先关闭自动提交，导入后再打开，也可以提交效率；</p>\n<blockquote>\n<p>set autocommit=0</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"优化-insert-语句\"><a href=\"#优化-insert-语句\" class=\"headerlink\" title=\"优化 insert 语句\"></a>优化 insert 语句</h1><ol>\n<li>如果同时从同一客户端插入多行，应用多个值表的 insert 语句，减少客户端与数据库之间的连接，关闭等消耗；</li>\n<li>如果从不同客户端同时插入多行，可以通过 insert delayed 语句得到更高的速度，它让 insert 马上执行，只是先放到内存队列中，再慢慢写入磁盘；</li>\n<li>将索引文件和数据文件分在不同的磁盘上存放；</li>\n<li>如果进行批量插入，可以提高 bulk_insert_buffer_size 的值（只对 MyISAM 表使用）；</li>\n<li>从一个文本载入数据时，load 比 insert 大约快 20 倍。</li>\n</ol>\n<h1 id=\"优化分页查询\"><a href=\"#优化分页查询\" class=\"headerlink\" title=\"优化分页查询\"></a>优化分页查询</h1><p>一般分页查询时，都会用到“limit 1000,20”类似的语句，但这样 Mysql 是读取 1020 条记录，然后再返回最后 20 条，这样就耗时太大；</p>\n<ol>\n<li>在索引上完成排序分页操作，最后根据主键关联会原表要查询的列；<blockquote>\n<p>select film_id, description from film order by title limit 50,5;<br>SELECT a.film_id, a.description from film a inner join (select film_id from film ORDER BY title limit 50,5)b on a.film_id=b.film_id;</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"常用-SQL-技巧\"><a href=\"#常用-SQL-技巧\" class=\"headerlink\" title=\"常用 SQL 技巧\"></a>常用 SQL 技巧</h1><ol>\n<li>运用正则表达式<blockquote>\n<p>select * from table where col reqexp ‘exp’;</p>\n</blockquote>\n</li>\n<li>用 rand() 提取随机行<blockquote>\n<p>select * from table order by rand() limit n;</p>\n</blockquote>\n</li>\n<li>利用 group by 的 with rollup 字句可以查询出分组的聚合信息<blockquote>\n<p>select col1,col2,sum(col3) from table group by col1;<br>select col1,col2,sum(col3) from table group by col1 with rollup;</p>\n</blockquote>\n</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"大批量插入数据\"><a href=\"#大批量插入数据\" class=\"headerlink\" title=\"大批量插入数据\"></a>大批量插入数据</h1><ol>\n<li>对于 MyISAM 储存引擎，可以用以下方式快速导入大量数据到一个非空表：<blockquote>\n<p>alter table tab_name disable keys;<br>load data infile ‘data.txt’ into table tab_name;<br>alter table tab_name enable keys;</p>\n</blockquote>\n</li>\n</ol>\n<p>上述设置只对 MyISAM有用，对 InnoDB 表无用，因为 InnoDB 表是按主键顺序保存的，如果数据按照主键顺序排序，可以有效提高导入数据。</p>\n<ol>\n<li><p>在导入前关闭唯一性校验，导入后再恢复，可以提高效率；</p>\n<blockquote>\n<p>set unique_checks=0<br>load data infile ‘data.txt’ into table tab_name<br>set unique_checks=1</p>\n</blockquote>\n</li>\n<li><p>如果使用自动提交的方式，建议先关闭自动提交，导入后再打开，也可以提交效率；</p>\n<blockquote>\n<p>set autocommit=0</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"优化-insert-语句\"><a href=\"#优化-insert-语句\" class=\"headerlink\" title=\"优化 insert 语句\"></a>优化 insert 语句</h1><ol>\n<li>如果同时从同一客户端插入多行，应用多个值表的 insert 语句，减少客户端与数据库之间的连接，关闭等消耗；</li>\n<li>如果从不同客户端同时插入多行，可以通过 insert delayed 语句得到更高的速度，它让 insert 马上执行，只是先放到内存队列中，再慢慢写入磁盘；</li>\n<li>将索引文件和数据文件分在不同的磁盘上存放；</li>\n<li>如果进行批量插入，可以提高 bulk_insert_buffer_size 的值（只对 MyISAM 表使用）；</li>\n<li>从一个文本载入数据时，load 比 insert 大约快 20 倍。</li>\n</ol>\n<h1 id=\"优化分页查询\"><a href=\"#优化分页查询\" class=\"headerlink\" title=\"优化分页查询\"></a>优化分页查询</h1><p>一般分页查询时，都会用到“limit 1000,20”类似的语句，但这样 Mysql 是读取 1020 条记录，然后再返回最后 20 条，这样就耗时太大；</p>\n<ol>\n<li>在索引上完成排序分页操作，最后根据主键关联会原表要查询的列；<blockquote>\n<p>select film_id, description from film order by title limit 50,5;<br>SELECT a.film_id, a.description from film a inner join (select film_id from film ORDER BY title limit 50,5)b on a.film_id=b.film_id;</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"常用-SQL-技巧\"><a href=\"#常用-SQL-技巧\" class=\"headerlink\" title=\"常用 SQL 技巧\"></a>常用 SQL 技巧</h1><ol>\n<li>运用正则表达式<blockquote>\n<p>select * from table where col reqexp ‘exp’;</p>\n</blockquote>\n</li>\n<li>用 rand() 提取随机行<blockquote>\n<p>select * from table order by rand() limit n;</p>\n</blockquote>\n</li>\n<li>利用 group by 的 with rollup 字句可以查询出分组的聚合信息<blockquote>\n<p>select col1,col2,sum(col3) from table group by col1;<br>select col1,col2,sum(col3) from table group by col1 with rollup;</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"浅谈TCP端口扫描技术","date":"2017-05-04T02:09:43.000Z","_content":"## 端口扫描描述 ##\n在一般的网络攻击或者说渗透测试中，首要任务也是最重要的任务就是踩点，也就是对目标系统信息的收集，而端口扫描就是踩点中最重要的一项。\n端口扫描不仅用于踩点，并且经常用于批量抓取肉鸡，就是在扫描到端口开放后就用弱口令尝试登录系统，最后将这些肉鸡用于 ddos 等其它领域。互联网中常用的端口有 ftp 服务端口 21 ，ssh 服务端口 22 ，TELNET 远程登录服务 23 ，DNS 服务端口 53 ，http 服务端口 80，windous 远程桌面服务 3389 端口，SQL Server 服务端口 1433 ，mysql 端口 3306 。\n在网络中，你的系统开放了几个端口，也就意味着你为别人开了几扇门,所以网络攻击是离不开端口的，黑客利用这些开放的端口就能进入你的系统，所以一个系统开放越少的端口就越安全。\n我们在计算机网络课程中都学过，端口这个概念来自于OSI模型中的传输层，用于系统中各个应用程序与外界交流。而传输层有TCP和UDP协议，所以端口也就分为TCP端口和UDP端口，现在我着重讲解的是TCP端口扫描。\n## TCP 端口扫描技术 ##\nTCP 端口扫描技术的基础是 TCP 协议中的三次握手以及四次挥手，这里面就涉及了 TCP 首头中的几个控制位，URG，ACK，PSH，\nRST，SYN，FIN。\n一次完整的 TCP 连接的步骤：\n1. 客户端发起连接将数据报中将 TCP 首头的 SYN 控制位置为 1，表明这是一个连接请求 。\n2. 服务端接受到连接请求，如果这个端口是开放的，就将回复的数据报 TCP 首头中 SYN 置为1，ACK 位也置位 1，表明接受请求并且也请求连接。如果这个端口没有开放，就将 RST 位置为1，表明这个连接失败。\n3. 客户端接受到服务器的回复，如果 SYN 和 ACK 位为1，就将 RST 位和 ACK 位置为 1 ，表明接受请求并且连接完毕。如果 RST 位为1，说明连接失败。\n\n而每种 TCP 端口扫描技术都是在这上面动手脚。\n### TCP 全连接 ###\n全 TCP 连接是 TCP 端口扫描的基础。它是我们最熟悉的，我们经常写的网络程序都会用到，它的原理很简单，就是一个普通的完整的 sockt 连接，也就是完整的三次握手和四次挥手。如果连接成功就说明这个端口是开放的，反之则是关闭的。虽然这种扫描技术简单且容易实现并且无需任何特殊权限，但是这种扫描容易被检测出来并且很慢，所以很不安全，用的很少。\n\n### SYN 扫描 ###\nSYN 扫描也被称为半开放扫描，它和 TCP 全连接差不多，只是如果端口开放，在第三次握手的时候只将 RST 位置为 1 。直接就将连接断开了，这样就可以绕开很多防火墙，检测出来的几率大大减小，就安全很多并且比较准确，所以这种方式用的比较多。\n\n### FIN 扫描 ###\nFIN 扫描是一种隐藏连接扫描，它和前两种有比较大的区别，因为前两种都是在建立连接是操作的，而这种扫描方式是基于断开连接的。它将 TCP 首头中 FIN 控制位置为 1 ，请求与服务器断开连接，如果服务器上这个端口关闭时，服务器会返回一个报文，并且 RST 位置为 1 。如果这个端口开放，因为并没有建立连接，何谈断开连接，所以服务器不会返回任何报文。而如果服务器返回一个 IMCP 报文，则表示这个报文被防火墙过滤了，所以这种方式很准确且速度比前两种快得多。\n\n## 常见的端口扫描器 ##\n* Nmap:Nmap 是一款用于网络发现和安全审计的网络安全工具，支持十几种端口扫描技术，当然它不仅用于端口扫描，它的功能很强大，基本是网络攻击的必备工具。\n* Zmap:Zmap 是一款号称一个小时扫完全网的端口扫描器，它采用的是一种加强的 SYN 扫描技术。\n","source":"_posts/浅谈TCP端口扫描技术-2017-5-4.md","raw":"---\ntitle: 浅谈TCP端口扫描技术\ncategories: 网络技术\ndate: 2017-05-04 10:09:43\n---\n## 端口扫描描述 ##\n在一般的网络攻击或者说渗透测试中，首要任务也是最重要的任务就是踩点，也就是对目标系统信息的收集，而端口扫描就是踩点中最重要的一项。\n端口扫描不仅用于踩点，并且经常用于批量抓取肉鸡，就是在扫描到端口开放后就用弱口令尝试登录系统，最后将这些肉鸡用于 ddos 等其它领域。互联网中常用的端口有 ftp 服务端口 21 ，ssh 服务端口 22 ，TELNET 远程登录服务 23 ，DNS 服务端口 53 ，http 服务端口 80，windous 远程桌面服务 3389 端口，SQL Server 服务端口 1433 ，mysql 端口 3306 。\n在网络中，你的系统开放了几个端口，也就意味着你为别人开了几扇门,所以网络攻击是离不开端口的，黑客利用这些开放的端口就能进入你的系统，所以一个系统开放越少的端口就越安全。\n我们在计算机网络课程中都学过，端口这个概念来自于OSI模型中的传输层，用于系统中各个应用程序与外界交流。而传输层有TCP和UDP协议，所以端口也就分为TCP端口和UDP端口，现在我着重讲解的是TCP端口扫描。\n## TCP 端口扫描技术 ##\nTCP 端口扫描技术的基础是 TCP 协议中的三次握手以及四次挥手，这里面就涉及了 TCP 首头中的几个控制位，URG，ACK，PSH，\nRST，SYN，FIN。\n一次完整的 TCP 连接的步骤：\n1. 客户端发起连接将数据报中将 TCP 首头的 SYN 控制位置为 1，表明这是一个连接请求 。\n2. 服务端接受到连接请求，如果这个端口是开放的，就将回复的数据报 TCP 首头中 SYN 置为1，ACK 位也置位 1，表明接受请求并且也请求连接。如果这个端口没有开放，就将 RST 位置为1，表明这个连接失败。\n3. 客户端接受到服务器的回复，如果 SYN 和 ACK 位为1，就将 RST 位和 ACK 位置为 1 ，表明接受请求并且连接完毕。如果 RST 位为1，说明连接失败。\n\n而每种 TCP 端口扫描技术都是在这上面动手脚。\n### TCP 全连接 ###\n全 TCP 连接是 TCP 端口扫描的基础。它是我们最熟悉的，我们经常写的网络程序都会用到，它的原理很简单，就是一个普通的完整的 sockt 连接，也就是完整的三次握手和四次挥手。如果连接成功就说明这个端口是开放的，反之则是关闭的。虽然这种扫描技术简单且容易实现并且无需任何特殊权限，但是这种扫描容易被检测出来并且很慢，所以很不安全，用的很少。\n\n### SYN 扫描 ###\nSYN 扫描也被称为半开放扫描，它和 TCP 全连接差不多，只是如果端口开放，在第三次握手的时候只将 RST 位置为 1 。直接就将连接断开了，这样就可以绕开很多防火墙，检测出来的几率大大减小，就安全很多并且比较准确，所以这种方式用的比较多。\n\n### FIN 扫描 ###\nFIN 扫描是一种隐藏连接扫描，它和前两种有比较大的区别，因为前两种都是在建立连接是操作的，而这种扫描方式是基于断开连接的。它将 TCP 首头中 FIN 控制位置为 1 ，请求与服务器断开连接，如果服务器上这个端口关闭时，服务器会返回一个报文，并且 RST 位置为 1 。如果这个端口开放，因为并没有建立连接，何谈断开连接，所以服务器不会返回任何报文。而如果服务器返回一个 IMCP 报文，则表示这个报文被防火墙过滤了，所以这种方式很准确且速度比前两种快得多。\n\n## 常见的端口扫描器 ##\n* Nmap:Nmap 是一款用于网络发现和安全审计的网络安全工具，支持十几种端口扫描技术，当然它不仅用于端口扫描，它的功能很强大，基本是网络攻击的必备工具。\n* Zmap:Zmap 是一款号称一个小时扫完全网的端口扫描器，它采用的是一种加强的 SYN 扫描技术。\n","slug":"浅谈TCP端口扫描技术","published":1,"updated":"2017-05-04T05:18:27.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3sv000al29vlwsjn5to","content":"<h2 id=\"端口扫描描述\"><a href=\"#端口扫描描述\" class=\"headerlink\" title=\"端口扫描描述\"></a>端口扫描描述</h2><p>在一般的网络攻击或者说渗透测试中，首要任务也是最重要的任务就是踩点，也就是对目标系统信息的收集，而端口扫描就是踩点中最重要的一项。<br>端口扫描不仅用于踩点，并且经常用于批量抓取肉鸡，就是在扫描到端口开放后就用弱口令尝试登录系统，最后将这些肉鸡用于 ddos 等其它领域。互联网中常用的端口有 ftp 服务端口 21 ，ssh 服务端口 22 ，TELNET 远程登录服务 23 ，DNS 服务端口 53 ，http 服务端口 80，windous 远程桌面服务 3389 端口，SQL Server 服务端口 1433 ，mysql 端口 3306 。<br>在网络中，你的系统开放了几个端口，也就意味着你为别人开了几扇门,所以网络攻击是离不开端口的，黑客利用这些开放的端口就能进入你的系统，所以一个系统开放越少的端口就越安全。<br>我们在计算机网络课程中都学过，端口这个概念来自于OSI模型中的传输层，用于系统中各个应用程序与外界交流。而传输层有TCP和UDP协议，所以端口也就分为TCP端口和UDP端口，现在我着重讲解的是TCP端口扫描。</p>\n<h2 id=\"TCP-端口扫描技术\"><a href=\"#TCP-端口扫描技术\" class=\"headerlink\" title=\"TCP 端口扫描技术\"></a>TCP 端口扫描技术</h2><p>TCP 端口扫描技术的基础是 TCP 协议中的三次握手以及四次挥手，这里面就涉及了 TCP 首头中的几个控制位，URG，ACK，PSH，<br>RST，SYN，FIN。<br>一次完整的 TCP 连接的步骤：</p>\n<ol>\n<li>客户端发起连接将数据报中将 TCP 首头的 SYN 控制位置为 1，表明这是一个连接请求 。</li>\n<li>服务端接受到连接请求，如果这个端口是开放的，就将回复的数据报 TCP 首头中 SYN 置为1，ACK 位也置位 1，表明接受请求并且也请求连接。如果这个端口没有开放，就将 RST 位置为1，表明这个连接失败。</li>\n<li>客户端接受到服务器的回复，如果 SYN 和 ACK 位为1，就将 RST 位和 ACK 位置为 1 ，表明接受请求并且连接完毕。如果 RST 位为1，说明连接失败。</li>\n</ol>\n<p>而每种 TCP 端口扫描技术都是在这上面动手脚。</p>\n<h3 id=\"TCP-全连接\"><a href=\"#TCP-全连接\" class=\"headerlink\" title=\"TCP 全连接\"></a>TCP 全连接</h3><p>全 TCP 连接是 TCP 端口扫描的基础。它是我们最熟悉的，我们经常写的网络程序都会用到，它的原理很简单，就是一个普通的完整的 sockt 连接，也就是完整的三次握手和四次挥手。如果连接成功就说明这个端口是开放的，反之则是关闭的。虽然这种扫描技术简单且容易实现并且无需任何特殊权限，但是这种扫描容易被检测出来并且很慢，所以很不安全，用的很少。</p>\n<h3 id=\"SYN-扫描\"><a href=\"#SYN-扫描\" class=\"headerlink\" title=\"SYN 扫描\"></a>SYN 扫描</h3><p>SYN 扫描也被称为半开放扫描，它和 TCP 全连接差不多，只是如果端口开放，在第三次握手的时候只将 RST 位置为 1 。直接就将连接断开了，这样就可以绕开很多防火墙，检测出来的几率大大减小，就安全很多并且比较准确，所以这种方式用的比较多。</p>\n<h3 id=\"FIN-扫描\"><a href=\"#FIN-扫描\" class=\"headerlink\" title=\"FIN 扫描\"></a>FIN 扫描</h3><p>FIN 扫描是一种隐藏连接扫描，它和前两种有比较大的区别，因为前两种都是在建立连接是操作的，而这种扫描方式是基于断开连接的。它将 TCP 首头中 FIN 控制位置为 1 ，请求与服务器断开连接，如果服务器上这个端口关闭时，服务器会返回一个报文，并且 RST 位置为 1 。如果这个端口开放，因为并没有建立连接，何谈断开连接，所以服务器不会返回任何报文。而如果服务器返回一个 IMCP 报文，则表示这个报文被防火墙过滤了，所以这种方式很准确且速度比前两种快得多。</p>\n<h2 id=\"常见的端口扫描器\"><a href=\"#常见的端口扫描器\" class=\"headerlink\" title=\"常见的端口扫描器\"></a>常见的端口扫描器</h2><ul>\n<li>Nmap:Nmap 是一款用于网络发现和安全审计的网络安全工具，支持十几种端口扫描技术，当然它不仅用于端口扫描，它的功能很强大，基本是网络攻击的必备工具。</li>\n<li>Zmap:Zmap 是一款号称一个小时扫完全网的端口扫描器，它采用的是一种加强的 SYN 扫描技术。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"端口扫描描述\"><a href=\"#端口扫描描述\" class=\"headerlink\" title=\"端口扫描描述\"></a>端口扫描描述</h2><p>在一般的网络攻击或者说渗透测试中，首要任务也是最重要的任务就是踩点，也就是对目标系统信息的收集，而端口扫描就是踩点中最重要的一项。<br>端口扫描不仅用于踩点，并且经常用于批量抓取肉鸡，就是在扫描到端口开放后就用弱口令尝试登录系统，最后将这些肉鸡用于 ddos 等其它领域。互联网中常用的端口有 ftp 服务端口 21 ，ssh 服务端口 22 ，TELNET 远程登录服务 23 ，DNS 服务端口 53 ，http 服务端口 80，windous 远程桌面服务 3389 端口，SQL Server 服务端口 1433 ，mysql 端口 3306 。<br>在网络中，你的系统开放了几个端口，也就意味着你为别人开了几扇门,所以网络攻击是离不开端口的，黑客利用这些开放的端口就能进入你的系统，所以一个系统开放越少的端口就越安全。<br>我们在计算机网络课程中都学过，端口这个概念来自于OSI模型中的传输层，用于系统中各个应用程序与外界交流。而传输层有TCP和UDP协议，所以端口也就分为TCP端口和UDP端口，现在我着重讲解的是TCP端口扫描。</p>\n<h2 id=\"TCP-端口扫描技术\"><a href=\"#TCP-端口扫描技术\" class=\"headerlink\" title=\"TCP 端口扫描技术\"></a>TCP 端口扫描技术</h2><p>TCP 端口扫描技术的基础是 TCP 协议中的三次握手以及四次挥手，这里面就涉及了 TCP 首头中的几个控制位，URG，ACK，PSH，<br>RST，SYN，FIN。<br>一次完整的 TCP 连接的步骤：</p>\n<ol>\n<li>客户端发起连接将数据报中将 TCP 首头的 SYN 控制位置为 1，表明这是一个连接请求 。</li>\n<li>服务端接受到连接请求，如果这个端口是开放的，就将回复的数据报 TCP 首头中 SYN 置为1，ACK 位也置位 1，表明接受请求并且也请求连接。如果这个端口没有开放，就将 RST 位置为1，表明这个连接失败。</li>\n<li>客户端接受到服务器的回复，如果 SYN 和 ACK 位为1，就将 RST 位和 ACK 位置为 1 ，表明接受请求并且连接完毕。如果 RST 位为1，说明连接失败。</li>\n</ol>\n<p>而每种 TCP 端口扫描技术都是在这上面动手脚。</p>\n<h3 id=\"TCP-全连接\"><a href=\"#TCP-全连接\" class=\"headerlink\" title=\"TCP 全连接\"></a>TCP 全连接</h3><p>全 TCP 连接是 TCP 端口扫描的基础。它是我们最熟悉的，我们经常写的网络程序都会用到，它的原理很简单，就是一个普通的完整的 sockt 连接，也就是完整的三次握手和四次挥手。如果连接成功就说明这个端口是开放的，反之则是关闭的。虽然这种扫描技术简单且容易实现并且无需任何特殊权限，但是这种扫描容易被检测出来并且很慢，所以很不安全，用的很少。</p>\n<h3 id=\"SYN-扫描\"><a href=\"#SYN-扫描\" class=\"headerlink\" title=\"SYN 扫描\"></a>SYN 扫描</h3><p>SYN 扫描也被称为半开放扫描，它和 TCP 全连接差不多，只是如果端口开放，在第三次握手的时候只将 RST 位置为 1 。直接就将连接断开了，这样就可以绕开很多防火墙，检测出来的几率大大减小，就安全很多并且比较准确，所以这种方式用的比较多。</p>\n<h3 id=\"FIN-扫描\"><a href=\"#FIN-扫描\" class=\"headerlink\" title=\"FIN 扫描\"></a>FIN 扫描</h3><p>FIN 扫描是一种隐藏连接扫描，它和前两种有比较大的区别，因为前两种都是在建立连接是操作的，而这种扫描方式是基于断开连接的。它将 TCP 首头中 FIN 控制位置为 1 ，请求与服务器断开连接，如果服务器上这个端口关闭时，服务器会返回一个报文，并且 RST 位置为 1 。如果这个端口开放，因为并没有建立连接，何谈断开连接，所以服务器不会返回任何报文。而如果服务器返回一个 IMCP 报文，则表示这个报文被防火墙过滤了，所以这种方式很准确且速度比前两种快得多。</p>\n<h2 id=\"常见的端口扫描器\"><a href=\"#常见的端口扫描器\" class=\"headerlink\" title=\"常见的端口扫描器\"></a>常见的端口扫描器</h2><ul>\n<li>Nmap:Nmap 是一款用于网络发现和安全审计的网络安全工具，支持十几种端口扫描技术，当然它不仅用于端口扫描，它的功能很强大，基本是网络攻击的必备工具。</li>\n<li>Zmap:Zmap 是一款号称一个小时扫完全网的端口扫描器，它采用的是一种加强的 SYN 扫描技术。</li>\n</ul>\n"},{"title":"设计模式学习（续）","date":"2017-03-27T05:09:41.000Z","_content":"\n### 适配器模式 ###\n> 将一个类的接口转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。\n\n### 外观模式 ###\n> 提供一个统一的接口用来访问子系统中的一群接口。外观定义了一个高层接口，让子系统更容易使用。\n","source":"_posts/设计模式学习（续）-2017-3-27.md","raw":"---\ntitle: 设计模式学习（续）\ncategories: 其它\ndate: 2017-03-27 13:09:41\n---\n\n### 适配器模式 ###\n> 将一个类的接口转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。\n\n### 外观模式 ###\n> 提供一个统一的接口用来访问子系统中的一群接口。外观定义了一个高层接口，让子系统更容易使用。\n","slug":"设计模式学习（续）","published":1,"updated":"2017-03-27T05:21:38.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3t1000dl29vptjisoro","content":"<h3 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h3><blockquote>\n<p>将一个类的接口转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。</p>\n</blockquote>\n<h3 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h3><blockquote>\n<p>提供一个统一的接口用来访问子系统中的一群接口。外观定义了一个高层接口，让子系统更容易使用。</p>\n</blockquote>\n","excerpt":"","more":"<h3 id=\"适配器模式\"><a href=\"#适配器模式\" class=\"headerlink\" title=\"适配器模式\"></a>适配器模式</h3><blockquote>\n<p>将一个类的接口转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。</p>\n</blockquote>\n<h3 id=\"外观模式\"><a href=\"#外观模式\" class=\"headerlink\" title=\"外观模式\"></a>外观模式</h3><blockquote>\n<p>提供一个统一的接口用来访问子系统中的一群接口。外观定义了一个高层接口，让子系统更容易使用。</p>\n</blockquote>\n"},{"title":"新的开始！","date":"2017-02-08T14:42:36.000Z","_content":"# 前期总结 #\n\n眨眼间，大三已去一半，回顾大学两年半,基本都在各种论坛闲逛，基本没怎么发言，都是潜水。\n\n或者折腾各种软件，杂七杂八的东西。虽然也学到了不少东西，但是我总觉得缺少了很多东西，在实际操作中总是会遇到很多问题。特别是上学期，我严重发现了自己的不足。也有过一次短期培训，让我稍微清楚了实际项目的流程。\n\n经过自己的总结，我得出以下一些问题。\n* ### 学的太多太杂，不深入。 ###\n* ### 自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。 ###\n* ### 实际操作太少，基本就是看了一些文章。 ###\n* ### 自己也有点太过自(zi)信(da)，总认为已经够了。 ###\n\n# 后期展望 #\n\n大三上期就像一个过渡期，让我看到了以前得不足，让我明白了很多东西。也让我对未来有了一定得规划,准备。争取在大学接下来的日子尽量充实自己，找一个好的工作，在计算机这条道路上走的更远。\n\n* ### 确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。###\n* ### 多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。 ###\n\n# 最后 #\n\n最后说一下本博客得开通吧！首先感谢一下[hexo](https://hexo.io/)和[github](https://github.com)以及[next](http://theme-next.iissnan.com/)，让我们写博客更方便，快捷，开源大法好。\n\n由于一个新的开始嘛，我就想着现在开始写博客。一来提高自己得写作以及表达能力；二来总结一下自己所学的知识，所谓好记性不如烂笔头嘛；三来和各位分享一下自己的心得，当然能得到大家的评鉴就更好了，一起提高嘛！！。\n\n开始起航吧,加油！！！！\n","source":"_posts/2017-2-8-新的开始！.md","raw":"---\ntitle: 新的开始！\ndate: 2017-02-08 22:42:36\ncategories: 其它\ntags:\n---\n# 前期总结 #\n\n眨眼间，大三已去一半，回顾大学两年半,基本都在各种论坛闲逛，基本没怎么发言，都是潜水。\n\n或者折腾各种软件，杂七杂八的东西。虽然也学到了不少东西，但是我总觉得缺少了很多东西，在实际操作中总是会遇到很多问题。特别是上学期，我严重发现了自己的不足。也有过一次短期培训，让我稍微清楚了实际项目的流程。\n\n经过自己的总结，我得出以下一些问题。\n* ### 学的太多太杂，不深入。 ###\n* ### 自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。 ###\n* ### 实际操作太少，基本就是看了一些文章。 ###\n* ### 自己也有点太过自(zi)信(da)，总认为已经够了。 ###\n\n# 后期展望 #\n\n大三上期就像一个过渡期，让我看到了以前得不足，让我明白了很多东西。也让我对未来有了一定得规划,准备。争取在大学接下来的日子尽量充实自己，找一个好的工作，在计算机这条道路上走的更远。\n\n* ### 确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。###\n* ### 多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。 ###\n\n# 最后 #\n\n最后说一下本博客得开通吧！首先感谢一下[hexo](https://hexo.io/)和[github](https://github.com)以及[next](http://theme-next.iissnan.com/)，让我们写博客更方便，快捷，开源大法好。\n\n由于一个新的开始嘛，我就想着现在开始写博客。一来提高自己得写作以及表达能力；二来总结一下自己所学的知识，所谓好记性不如烂笔头嘛；三来和各位分享一下自己的心得，当然能得到大家的评鉴就更好了，一起提高嘛！！。\n\n开始起航吧,加油！！！！\n","slug":"2017-2-8-新的开始！","published":1,"updated":"2017-02-09T10:46:36.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5i8r3va000ql29vdrxfd1y9","content":"<h1 id=\"前期总结\"><a href=\"#前期总结\" class=\"headerlink\" title=\"前期总结\"></a>前期总结</h1><p>眨眼间，大三已去一半，回顾大学两年半,基本都在各种论坛闲逛，基本没怎么发言，都是潜水。</p>\n<p>或者折腾各种软件，杂七杂八的东西。虽然也学到了不少东西，但是我总觉得缺少了很多东西，在实际操作中总是会遇到很多问题。特别是上学期，我严重发现了自己的不足。也有过一次短期培训，让我稍微清楚了实际项目的流程。</p>\n<p>经过自己的总结，我得出以下一些问题。</p>\n<ul>\n<li><h3 id=\"学的太多太杂，不深入。\"><a href=\"#学的太多太杂，不深入。\" class=\"headerlink\" title=\"学的太多太杂，不深入。\"></a>学的太多太杂，不深入。</h3></li>\n<li><h3 id=\"自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\"><a href=\"#自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\" class=\"headerlink\" title=\"自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\"></a>自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。</h3></li>\n<li><h3 id=\"实际操作太少，基本就是看了一些文章。\"><a href=\"#实际操作太少，基本就是看了一些文章。\" class=\"headerlink\" title=\"实际操作太少，基本就是看了一些文章。\"></a>实际操作太少，基本就是看了一些文章。</h3></li>\n<li><h3 id=\"自己也有点太过自-zi-信-da-，总认为已经够了。\"><a href=\"#自己也有点太过自-zi-信-da-，总认为已经够了。\" class=\"headerlink\" title=\"自己也有点太过自(zi)信(da)，总认为已经够了。\"></a>自己也有点太过自(zi)信(da)，总认为已经够了。</h3></li>\n</ul>\n<h1 id=\"后期展望\"><a href=\"#后期展望\" class=\"headerlink\" title=\"后期展望\"></a>后期展望</h1><p>大三上期就像一个过渡期，让我看到了以前得不足，让我明白了很多东西。也让我对未来有了一定得规划,准备。争取在大学接下来的日子尽量充实自己，找一个好的工作，在计算机这条道路上走的更远。</p>\n<ul>\n<li><h3 id=\"确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\"><a href=\"#确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\" class=\"headerlink\" title=\"确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\"></a>确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。</h3></li>\n<li><h3 id=\"多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\"><a href=\"#多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\" class=\"headerlink\" title=\"多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\"></a>多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。</h3></li>\n</ul>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>最后说一下本博客得开通吧！首先感谢一下<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">hexo</a>和<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">github</a>以及<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">next</a>，让我们写博客更方便，快捷，开源大法好。</p>\n<p>由于一个新的开始嘛，我就想着现在开始写博客。一来提高自己得写作以及表达能力；二来总结一下自己所学的知识，所谓好记性不如烂笔头嘛；三来和各位分享一下自己的心得，当然能得到大家的评鉴就更好了，一起提高嘛！！。</p>\n<p>开始起航吧,加油！！！！</p>\n","excerpt":"","more":"<h1 id=\"前期总结\"><a href=\"#前期总结\" class=\"headerlink\" title=\"前期总结\"></a>前期总结</h1><p>眨眼间，大三已去一半，回顾大学两年半,基本都在各种论坛闲逛，基本没怎么发言，都是潜水。</p>\n<p>或者折腾各种软件，杂七杂八的东西。虽然也学到了不少东西，但是我总觉得缺少了很多东西，在实际操作中总是会遇到很多问题。特别是上学期，我严重发现了自己的不足。也有过一次短期培训，让我稍微清楚了实际项目的流程。</p>\n<p>经过自己的总结，我得出以下一些问题。</p>\n<ul>\n<li><h3 id=\"学的太多太杂，不深入。\"><a href=\"#学的太多太杂，不深入。\" class=\"headerlink\" title=\"学的太多太杂，不深入。\"></a>学的太多太杂，不深入。</h3></li>\n<li><h3 id=\"自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\"><a href=\"#自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\" class=\"headerlink\" title=\"自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。\"></a>自己学得模式有点像猴子搬包谷，看到听到什么就想去学什么。</h3></li>\n<li><h3 id=\"实际操作太少，基本就是看了一些文章。\"><a href=\"#实际操作太少，基本就是看了一些文章。\" class=\"headerlink\" title=\"实际操作太少，基本就是看了一些文章。\"></a>实际操作太少，基本就是看了一些文章。</h3></li>\n<li><h3 id=\"自己也有点太过自-zi-信-da-，总认为已经够了。\"><a href=\"#自己也有点太过自-zi-信-da-，总认为已经够了。\" class=\"headerlink\" title=\"自己也有点太过自(zi)信(da)，总认为已经够了。\"></a>自己也有点太过自(zi)信(da)，总认为已经够了。</h3></li>\n</ul>\n<h1 id=\"后期展望\"><a href=\"#后期展望\" class=\"headerlink\" title=\"后期展望\"></a>后期展望</h1><p>大三上期就像一个过渡期，让我看到了以前得不足，让我明白了很多东西。也让我对未来有了一定得规划,准备。争取在大学接下来的日子尽量充实自己，找一个好的工作，在计算机这条道路上走的更远。</p>\n<ul>\n<li><h3 id=\"确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\"><a href=\"#确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\" class=\"headerlink\" title=\"确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。\"></a>确定未来方向，主要专研java，python方面，当然这里面也包括了很多东西，尽量都深入一下。</h3></li>\n<li><h3 id=\"多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\"><a href=\"#多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\" class=\"headerlink\" title=\"多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。\"></a>多找一些实际项目来做，尽量多操作，多实践，弥补这方面的不足。</h3></li>\n</ul>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>最后说一下本博客得开通吧！首先感谢一下<a href=\"https://hexo.io/\">hexo</a>和<a href=\"https://github.com\">github</a>以及<a href=\"http://theme-next.iissnan.com/\">next</a>，让我们写博客更方便，快捷，开源大法好。</p>\n<p>由于一个新的开始嘛，我就想着现在开始写博客。一来提高自己得写作以及表达能力；二来总结一下自己所学的知识，所谓好记性不如烂笔头嘛；三来和各位分享一下自己的心得，当然能得到大家的评鉴就更好了，一起提高嘛！！。</p>\n<p>开始起航吧,加油！！！！</p>\n"},{"title":"python编码详解","date":"2017-02-27T12:51:17.000Z","_content":"\n### 概念\n# 编码（Encode）\n> 用预先规定的方法将文字、数字或其它对象编成数码，或将信息、数据转换成规定的电脉冲信号。也就是将文字等信息以二进制数据存储到计算机中。与之相对应的就是解码（Decode）。\n\n### 问题由来\n在计算机中，经常会遇到乱码，莫名其妙就是一堆看不懂的东西。现在我主要要两个地方经常遇到乱码，一个是网站网页中，经常写的网页中文就是乱码，这个还好解决一点。第二个就是在python编程中，经常会遇到莫名错误提示，代表性的：\n< UnicodeDecodeError:'ascii' codec can't decode byte 0xe5 in position 0\n有时候搞半天不知道哪儿出错了，就卡在那儿不知所措。要想解决这些问题，我们就必须把计算机中编码解码问题搞清楚。\n\n### 编码历史\n#ASCII\n1946年2月14日第一台计算机在每个宾夕法尼亚大学诞生，为了在计算机中表示英语，美国人就制定了一套标准，这就是ASCII。它用一个字节来表示英文中所有字符和一些常用字符(键盘上每一个键位)，一个字节（8位）可以表示256个字符，表示英文中那几个字符绰绰有余。并且刚开始只用了7位，最高位保留为0。后来计算机普及到西欧地区时才将最高位用到，制定了EASCII（Extesible ASCII）标准。\n#GB2312和GBK\n20世纪八十年代左右，计算机开始普及到中国，但这时就面临着一个问题，那就是汉字成千上万，这已经不是ASCII所能表示的范围了。为了解决这个问题，1981年中国国家标准总局发布了GB2312编码标准。它基本能表示99.75%的汉字。但随着各方面的需求，这也不能满足。于是又在GB2312的基础上又创建了GBK编码。它不仅能表示27484个汉字。还可以表示很多少数民族的文字。\n#Unicode\n就这样，全世界各国都发布了自己的标准。在互联网上交流和传输数据就会出现问题。于是为了统一世界的文字编码。统一国际组织提出了Unicode编码。普遍所用的Unicode用4个字节来表示字符，最高位仍保留为0，这完全能囊括世界所有的文字字符，世界上任何一个字符都可以用一个Unicode编码来表示，一旦字符的Unicode编码确定下来后，就不会再改变了。\n#UTF-8\nUnicode的实现方式不同于编码方式。在实际传输与保存时，由于不同的系统平台设计不一定，或者为了节省存储空间，必定用4个字节来保存一个字符太浪费空间了。于是Unicode就有了不同的实现方式，如UTF-16，UTF-8等，当然用的多的就是UTF-8了。\n\n\nUTF-8（Unicode Transformation Format）作为Unicode的一种实现方式，广泛应用于互联网，它是一种变长的字符编码，可以根据具体情况用1-4个字节来表示一个字符。比如英文字符这些原本就可以用ASCII码表示的字符用UTF-8表示时就只需要一个字节的空间，和ASCII是一样的。对于多字节（n个字节）的字符，第一个字节的前n为都设为1，第n+1位设为0，后面字节的前两位都设为10。剩下的二进制位全部用该字符的unicode码填充。\n以汉字“好”为例，“好”对应的Unicode是597D，对应的区间是0000 0800–0000 FFFF，因此它用UTF-8表示时需要用3个字节来存储，597D用二进制表示是： 0101100101111101，填充到1110xxxx 10xxxxxx 10xxxxxx得到11100101 10100101 10111101，转换成16进制：e5a5bd，因此“好”的Unicode”597D”对应的UTF-8编码是”E5A5BD”\n\n#Python字符编码问题\n由于Python出的比Uncode早，所以python用的编码就是ASICC，源代码也必须是ASCII，所以在源码中不能有汉字，为了在源码中支持中文，就必须在在源文件开头指定编码格式。\n> #coding=utf-8\n或者\n> -*- coding: utf-8 _*_\n在python中字符串有两种数据类型str和unicode。str类型的字符具体编码和操作系统有关。\n\npython中str与unicode之间的转换也是decode和encode：\n> str-->unicode 用decode方法。\n> unicode-->str 用encode方法。\n\n#参考\n* https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&mid=2652564196&idx=2&sn=f12b49f57d22309fe84e6c2518e99de5&pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B\n* http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000\n","source":"_posts/2017-2-27-python编码详解.md","raw":"---\ntitle: python编码详解\ncategories: Python\ndate: 2017-02-27 20:51:17\n---\n\n### 概念\n# 编码（Encode）\n> 用预先规定的方法将文字、数字或其它对象编成数码，或将信息、数据转换成规定的电脉冲信号。也就是将文字等信息以二进制数据存储到计算机中。与之相对应的就是解码（Decode）。\n\n### 问题由来\n在计算机中，经常会遇到乱码，莫名其妙就是一堆看不懂的东西。现在我主要要两个地方经常遇到乱码，一个是网站网页中，经常写的网页中文就是乱码，这个还好解决一点。第二个就是在python编程中，经常会遇到莫名错误提示，代表性的：\n< UnicodeDecodeError:'ascii' codec can't decode byte 0xe5 in position 0\n有时候搞半天不知道哪儿出错了，就卡在那儿不知所措。要想解决这些问题，我们就必须把计算机中编码解码问题搞清楚。\n\n### 编码历史\n#ASCII\n1946年2月14日第一台计算机在每个宾夕法尼亚大学诞生，为了在计算机中表示英语，美国人就制定了一套标准，这就是ASCII。它用一个字节来表示英文中所有字符和一些常用字符(键盘上每一个键位)，一个字节（8位）可以表示256个字符，表示英文中那几个字符绰绰有余。并且刚开始只用了7位，最高位保留为0。后来计算机普及到西欧地区时才将最高位用到，制定了EASCII（Extesible ASCII）标准。\n#GB2312和GBK\n20世纪八十年代左右，计算机开始普及到中国，但这时就面临着一个问题，那就是汉字成千上万，这已经不是ASCII所能表示的范围了。为了解决这个问题，1981年中国国家标准总局发布了GB2312编码标准。它基本能表示99.75%的汉字。但随着各方面的需求，这也不能满足。于是又在GB2312的基础上又创建了GBK编码。它不仅能表示27484个汉字。还可以表示很多少数民族的文字。\n#Unicode\n就这样，全世界各国都发布了自己的标准。在互联网上交流和传输数据就会出现问题。于是为了统一世界的文字编码。统一国际组织提出了Unicode编码。普遍所用的Unicode用4个字节来表示字符，最高位仍保留为0，这完全能囊括世界所有的文字字符，世界上任何一个字符都可以用一个Unicode编码来表示，一旦字符的Unicode编码确定下来后，就不会再改变了。\n#UTF-8\nUnicode的实现方式不同于编码方式。在实际传输与保存时，由于不同的系统平台设计不一定，或者为了节省存储空间，必定用4个字节来保存一个字符太浪费空间了。于是Unicode就有了不同的实现方式，如UTF-16，UTF-8等，当然用的多的就是UTF-8了。\n\n\nUTF-8（Unicode Transformation Format）作为Unicode的一种实现方式，广泛应用于互联网，它是一种变长的字符编码，可以根据具体情况用1-4个字节来表示一个字符。比如英文字符这些原本就可以用ASCII码表示的字符用UTF-8表示时就只需要一个字节的空间，和ASCII是一样的。对于多字节（n个字节）的字符，第一个字节的前n为都设为1，第n+1位设为0，后面字节的前两位都设为10。剩下的二进制位全部用该字符的unicode码填充。\n以汉字“好”为例，“好”对应的Unicode是597D，对应的区间是0000 0800–0000 FFFF，因此它用UTF-8表示时需要用3个字节来存储，597D用二进制表示是： 0101100101111101，填充到1110xxxx 10xxxxxx 10xxxxxx得到11100101 10100101 10111101，转换成16进制：e5a5bd，因此“好”的Unicode”597D”对应的UTF-8编码是”E5A5BD”\n\n#Python字符编码问题\n由于Python出的比Uncode早，所以python用的编码就是ASICC，源代码也必须是ASCII，所以在源码中不能有汉字，为了在源码中支持中文，就必须在在源文件开头指定编码格式。\n> #coding=utf-8\n或者\n> -*- coding: utf-8 _*_\n在python中字符串有两种数据类型str和unicode。str类型的字符具体编码和操作系统有关。\n\npython中str与unicode之间的转换也是decode和encode：\n> str-->unicode 用decode方法。\n> unicode-->str 用encode方法。\n\n#参考\n* https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&mid=2652564196&idx=2&sn=f12b49f57d22309fe84e6c2518e99de5&pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B\n* http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000\n","slug":"2017-2-27-python编码详解","published":1,"updated":"2017-09-26T14:07:16.795Z","_id":"cj5i8r3w3000sl29vsh1kl7is","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><h1 id=\"编码（Encode）\"><a href=\"#编码（Encode）\" class=\"headerlink\" title=\"编码（Encode）\"></a>编码（Encode）</h1><blockquote>\n<p>用预先规定的方法将文字、数字或其它对象编成数码，或将信息、数据转换成规定的电脉冲信号。也就是将文字等信息以二进制数据存储到计算机中。与之相对应的就是解码（Decode）。</p>\n</blockquote>\n<h3 id=\"问题由来\"><a href=\"#问题由来\" class=\"headerlink\" title=\"问题由来\"></a>问题由来</h3><p>在计算机中，经常会遇到乱码，莫名其妙就是一堆看不懂的东西。现在我主要要两个地方经常遇到乱码，一个是网站网页中，经常写的网页中文就是乱码，这个还好解决一点。第二个就是在python编程中，经常会遇到莫名错误提示，代表性的：<br>&lt; UnicodeDecodeError:’ascii’ codec can’t decode byte 0xe5 in position 0<br>有时候搞半天不知道哪儿出错了，就卡在那儿不知所措。要想解决这些问题，我们就必须把计算机中编码解码问题搞清楚。</p>\n<h3 id=\"编码历史\"><a href=\"#编码历史\" class=\"headerlink\" title=\"编码历史\"></a>编码历史</h3><p>#ASCII<br>1946年2月14日第一台计算机在每个宾夕法尼亚大学诞生，为了在计算机中表示英语，美国人就制定了一套标准，这就是ASCII。它用一个字节来表示英文中所有字符和一些常用字符(键盘上每一个键位)，一个字节（8位）可以表示256个字符，表示英文中那几个字符绰绰有余。并且刚开始只用了7位，最高位保留为0。后来计算机普及到西欧地区时才将最高位用到，制定了EASCII（Extesible ASCII）标准。</p>\n<p>#GB2312和GBK<br>20世纪八十年代左右，计算机开始普及到中国，但这时就面临着一个问题，那就是汉字成千上万，这已经不是ASCII所能表示的范围了。为了解决这个问题，1981年中国国家标准总局发布了GB2312编码标准。它基本能表示99.75%的汉字。但随着各方面的需求，这也不能满足。于是又在GB2312的基础上又创建了GBK编码。它不仅能表示27484个汉字。还可以表示很多少数民族的文字。</p>\n<p>#Unicode<br>就这样，全世界各国都发布了自己的标准。在互联网上交流和传输数据就会出现问题。于是为了统一世界的文字编码。统一国际组织提出了Unicode编码。普遍所用的Unicode用4个字节来表示字符，最高位仍保留为0，这完全能囊括世界所有的文字字符，世界上任何一个字符都可以用一个Unicode编码来表示，一旦字符的Unicode编码确定下来后，就不会再改变了。</p>\n<p>#UTF-8<br>Unicode的实现方式不同于编码方式。在实际传输与保存时，由于不同的系统平台设计不一定，或者为了节省存储空间，必定用4个字节来保存一个字符太浪费空间了。于是Unicode就有了不同的实现方式，如UTF-16，UTF-8等，当然用的多的就是UTF-8了。</p>\n<p>UTF-8（Unicode Transformation Format）作为Unicode的一种实现方式，广泛应用于互联网，它是一种变长的字符编码，可以根据具体情况用1-4个字节来表示一个字符。比如英文字符这些原本就可以用ASCII码表示的字符用UTF-8表示时就只需要一个字节的空间，和ASCII是一样的。对于多字节（n个字节）的字符，第一个字节的前n为都设为1，第n+1位设为0，后面字节的前两位都设为10。剩下的二进制位全部用该字符的unicode码填充。<br>以汉字“好”为例，“好”对应的Unicode是597D，对应的区间是0000 0800–0000 FFFF，因此它用UTF-8表示时需要用3个字节来存储，597D用二进制表示是： 0101100101111101，填充到1110xxxx 10xxxxxx 10xxxxxx得到11100101 10100101 10111101，转换成16进制：e5a5bd，因此“好”的Unicode”597D”对应的UTF-8编码是”E5A5BD”</p>\n<p>#Python字符编码问题<br>由于Python出的比Uncode早，所以python用的编码就是ASICC，源代码也必须是ASCII，所以在源码中不能有汉字，为了在源码中支持中文，就必须在在源文件开头指定编码格式。</p>\n<blockquote>\n<p>#coding=utf-8<br>或者<br>-<em>- coding: utf-8 _</em>_<br>在python中字符串有两种数据类型str和unicode。str类型的字符具体编码和操作系统有关。</p>\n</blockquote>\n<p>python中str与unicode之间的转换也是decode和encode：</p>\n<blockquote>\n<p>str–&gt;unicode 用decode方法。<br>unicode–&gt;str 用encode方法。</p>\n</blockquote>\n<p>#参考</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;mid=2652564196&amp;idx=2&amp;sn=f12b49f57d22309fe84e6c2518e99de5&amp;pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B\" target=\"_blank\" rel=\"external\">https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;mid=2652564196&amp;idx=2&amp;sn=f12b49f57d22309fe84e6c2518e99de5&amp;pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B</a></li>\n<li><a href=\"http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000\" target=\"_blank\" rel=\"external\">http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000</a></li>\n</ul>\n","excerpt":"","more":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><h1 id=\"编码（Encode）\"><a href=\"#编码（Encode）\" class=\"headerlink\" title=\"编码（Encode）\"></a>编码（Encode）</h1><blockquote>\n<p>用预先规定的方法将文字、数字或其它对象编成数码，或将信息、数据转换成规定的电脉冲信号。也就是将文字等信息以二进制数据存储到计算机中。与之相对应的就是解码（Decode）。</p>\n</blockquote>\n<h3 id=\"问题由来\"><a href=\"#问题由来\" class=\"headerlink\" title=\"问题由来\"></a>问题由来</h3><p>在计算机中，经常会遇到乱码，莫名其妙就是一堆看不懂的东西。现在我主要要两个地方经常遇到乱码，一个是网站网页中，经常写的网页中文就是乱码，这个还好解决一点。第二个就是在python编程中，经常会遇到莫名错误提示，代表性的：<br>&lt; UnicodeDecodeError:’ascii’ codec can’t decode byte 0xe5 in position 0<br>有时候搞半天不知道哪儿出错了，就卡在那儿不知所措。要想解决这些问题，我们就必须把计算机中编码解码问题搞清楚。</p>\n<h3 id=\"编码历史\"><a href=\"#编码历史\" class=\"headerlink\" title=\"编码历史\"></a>编码历史</h3><p>#ASCII<br>1946年2月14日第一台计算机在每个宾夕法尼亚大学诞生，为了在计算机中表示英语，美国人就制定了一套标准，这就是ASCII。它用一个字节来表示英文中所有字符和一些常用字符(键盘上每一个键位)，一个字节（8位）可以表示256个字符，表示英文中那几个字符绰绰有余。并且刚开始只用了7位，最高位保留为0。后来计算机普及到西欧地区时才将最高位用到，制定了EASCII（Extesible ASCII）标准。</p>\n<p>#GB2312和GBK<br>20世纪八十年代左右，计算机开始普及到中国，但这时就面临着一个问题，那就是汉字成千上万，这已经不是ASCII所能表示的范围了。为了解决这个问题，1981年中国国家标准总局发布了GB2312编码标准。它基本能表示99.75%的汉字。但随着各方面的需求，这也不能满足。于是又在GB2312的基础上又创建了GBK编码。它不仅能表示27484个汉字。还可以表示很多少数民族的文字。</p>\n<p>#Unicode<br>就这样，全世界各国都发布了自己的标准。在互联网上交流和传输数据就会出现问题。于是为了统一世界的文字编码。统一国际组织提出了Unicode编码。普遍所用的Unicode用4个字节来表示字符，最高位仍保留为0，这完全能囊括世界所有的文字字符，世界上任何一个字符都可以用一个Unicode编码来表示，一旦字符的Unicode编码确定下来后，就不会再改变了。</p>\n<p>#UTF-8<br>Unicode的实现方式不同于编码方式。在实际传输与保存时，由于不同的系统平台设计不一定，或者为了节省存储空间，必定用4个字节来保存一个字符太浪费空间了。于是Unicode就有了不同的实现方式，如UTF-16，UTF-8等，当然用的多的就是UTF-8了。</p>\n<p>UTF-8（Unicode Transformation Format）作为Unicode的一种实现方式，广泛应用于互联网，它是一种变长的字符编码，可以根据具体情况用1-4个字节来表示一个字符。比如英文字符这些原本就可以用ASCII码表示的字符用UTF-8表示时就只需要一个字节的空间，和ASCII是一样的。对于多字节（n个字节）的字符，第一个字节的前n为都设为1，第n+1位设为0，后面字节的前两位都设为10。剩下的二进制位全部用该字符的unicode码填充。<br>以汉字“好”为例，“好”对应的Unicode是597D，对应的区间是0000 0800–0000 FFFF，因此它用UTF-8表示时需要用3个字节来存储，597D用二进制表示是： 0101100101111101，填充到1110xxxx 10xxxxxx 10xxxxxx得到11100101 10100101 10111101，转换成16进制：e5a5bd，因此“好”的Unicode”597D”对应的UTF-8编码是”E5A5BD”</p>\n<p>#Python字符编码问题<br>由于Python出的比Uncode早，所以python用的编码就是ASICC，源代码也必须是ASCII，所以在源码中不能有汉字，为了在源码中支持中文，就必须在在源文件开头指定编码格式。</p>\n<blockquote>\n<p>#coding=utf-8<br>或者<br>-<em>- coding: utf-8 _</em>_<br>在python中字符串有两种数据类型str和unicode。str类型的字符具体编码和操作系统有关。</p>\n</blockquote>\n<p>python中str与unicode之间的转换也是decode和encode：</p>\n<blockquote>\n<p>str–&gt;unicode 用decode方法。<br>unicode–&gt;str 用encode方法。</p>\n</blockquote>\n<p>#参考</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;mid=2652564196&amp;idx=2&amp;sn=f12b49f57d22309fe84e6c2518e99de5&amp;pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B\">https://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;mid=2652564196&amp;idx=2&amp;sn=f12b49f57d22309fe84e6c2518e99de5&amp;pass_ticket=15P%2BhK91bYNpbTZ4iSMRdhysUWU%2BrOfaA0lJ5ydo4%2FfGVjyXErn4ZN70qKCqwPf%2B</a></li>\n<li><a href=\"http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000\">http://www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj5i8r3sl0004l29vrg68i50p","category_id":"cj5i8r3se0002l29vtbxwcgt1","_id":"cj5i8r3su0009l29v94g5c582"},{"post_id":"cj5i8r3s60000l29vno3mcup1","category_id":"cj5i8r3se0002l29vtbxwcgt1","_id":"cj5i8r3t0000cl29v2vubw6rn"},{"post_id":"cj5i8r3sr0007l29vu8krjjpu","category_id":"cj5i8r3se0002l29vtbxwcgt1","_id":"cj5i8r3t3000el29vuq7xxiyc"},{"post_id":"cj5i8r3sb0001l29v2hmtx98n","category_id":"cj5i8r3sq0006l29vf49zuo26","_id":"cj5i8r3t4000il29vxz7f89r0"},{"post_id":"cj5i8r3t1000dl29vptjisoro","category_id":"cj5i8r3se0002l29vtbxwcgt1","_id":"cj5i8r3t5000jl29velqx0rgi"},{"post_id":"cj5i8r3si0003l29vzbeyumwl","category_id":"cj5i8r3sq0006l29vf49zuo26","_id":"cj5i8r3t5000ll29v6jzc1yhh"},{"post_id":"cj5i8r3sp0005l29vtb32effc","category_id":"cj5i8r3t4000gl29vzk31jeoc","_id":"cj5i8r3t6000nl29v4pbrkr1x"},{"post_id":"cj5i8r3sv000al29vlwsjn5to","category_id":"cj5i8r3t5000kl29vz0g3ci4k","_id":"cj5i8r3t6000ol29vtefz6uu4"},{"post_id":"cj5i8r3va000ql29vdrxfd1y9","category_id":"cj5i8r3se0002l29vtbxwcgt1","_id":"cj5i8r3ve000rl29vyllqtule"},{"post_id":"cj5i8r3w3000sl29vsh1kl7is","category_id":"cj5i8r3w7000tl29v649dej8g","_id":"cj5i8r3w8000ul29v2c9e3s7e"}],"PostTag":[{"post_id":"cj5i8r3sp0005l29vtb32effc","tag_id":"cj5i8r3su0008l29v8dnxrns5","_id":"cj5i8r3t4000hl29v4a0tr1wg"},{"post_id":"cj5i8r3sr0007l29vu8krjjpu","tag_id":"cj5i8r3t3000fl29vdyda0z5m","_id":"cj5i8r3t5000ml29vka6g4duu"}],"Tag":[{"name":"Mysql","_id":"cj5i8r3su0008l29v8dnxrns5"},{"name":"SQL","_id":"cj5i8r3t3000fl29vdyda0z5m"}]}}